{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dell\\\\Desktop\\\\api\\\\notes-taker-fullstack\\\\notes-taker-client\\\\src\\\\components\\\\Login.js\";\n\n/* eslint-disable no-unused-expressions */\n\n/* eslint-disable no-sequences */\nimport React, { useState, useContext } from 'react';\nimport Axios from 'axios';\nimport { useHistory } from 'react-router';\nimport { Link } from 'react-router-dom';\nimport { BiLogInCircle } from \"react-icons/bi\";\nimport { toast } from \"react-toastify\";\nimport { AuthContext } from '../helpers/AuthContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Login = ({\n  props,\n  login\n}) => {\n  // const [email, setEmail] = useState(\"\");\n  // const [password, setPassword] = useState(\"\");\n  // const history = useHistory();\n  // const { setUserId } = useContext(AuthContext)\n  // const url = \"http://localhost:3002/auth\"\n  // const login = () => {\n  //     const data = { email: email, password: password }\n  //     Axios.post(url + \"/login\", data).then((response) => {\n  //         if (response.data.error) {\n  //             toast.warn(response.data.error)\n  //             // alert(response.data)\n  //             // if there is any error, don't create an accessToken to localstorage, else if any error doesn't exist, create accessToken\n  //             console.log(\"response if condition error: \", response.data.error);\n  //         }\n  //         else {\n  //             toast.success(response.data.message)\n  //             console.log(\"userData: \", response.data.id);\n  //             // setUserId(response.data.id)\n  //             localStorage.setItem(\"token\", response.data.token); //this comes from routes -> const accessToken -> res.json({token, username, id})\n  //             // const userData = {\n  //             //     id: response.data.id,\n  //             //     // name: response.data.name,\n  //             //     // email: response.data.email\n  //             // }\n  //             // localStorage.setItem(\"user\", JSON.stringify(userData));\n  //             redirect();\n  //         }\n  //     })\n  // }\n  // const redirect = () => {\n  //     history.push(\"/dashboard\")\n  // }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container-bcg\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form login-form d-flex flex-column justify-content-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"icon text-center\",\n        children: /*#__PURE__*/_jsxDEV(BiLogInCircle, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"dark-blue\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-space\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Email\",\n          onChange: event => {\n            props.setEmail(event.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          placeholder: \"Password\",\n          onChange: event => {\n            props.setPassword(event.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"button-span text-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: login,\n            children: \"Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"Create an account \", /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/create-account\",\n            children: \"here\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 45\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 9\n  }, this);\n};\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["C:/Users/Dell/Desktop/api/notes-taker-fullstack/notes-taker-client/src/components/Login.js"],"names":["React","useState","useContext","Axios","useHistory","Link","BiLogInCircle","toast","AuthContext","Login","props","login","event","setEmail","target","value","setPassword"],"mappings":";;AAAA;;AACA;AACA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,QAA4C,OAA5C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,cAA3B;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,aAAT,QAA8B,gBAA9B;AACA,SAASC,KAAT,QAAsB,gBAAtB;AACA,SAASC,WAAT,QAA4B,wBAA5B;;;AAEA,MAAMC,KAAK,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA;AAAT,CAAD,KAAsB;AAChC;AACA;AACA;AACA;AAEA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA,sBAEI;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA,2BACI;AAAK,MAAA,SAAS,EAAC,2DAAf;AAAA,8BACI;AAAK,QAAA,SAAS,EAAC,kBAAf;AAAA,+BACI,QAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ,eAII;AAAI,QAAA,SAAS,EAAC,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJJ,eAKI;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA,gCACI;AAAO,UAAA,IAAI,EAAC,MAAZ;AAAmB,UAAA,WAAW,EAAC,OAA/B;AAAuC,UAAA,QAAQ,EAAGC,KAAD,IAAW;AAAEF,YAAAA,KAAK,CAACG,QAAN,CAAeD,KAAK,CAACE,MAAN,CAAaC,KAA5B;AAAoC;AAAlG;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAO,UAAA,IAAI,EAAC,UAAZ;AAAuB,UAAA,WAAW,EAAC,UAAnC;AAA8C,UAAA,QAAQ,EAAGH,KAAD,IAAW;AAAEF,YAAAA,KAAK,CAACM,WAAN,CAAkBJ,KAAK,CAACE,MAAN,CAAaC,KAA/B;AAAuC;AAA5G;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cALJ,eAUI;AAAK,QAAA,SAAS,EAAC,yBAAf;AAAA,gCACI;AAAA,iCACI;AAAQ,YAAA,OAAO,EAAEJ,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBADJ,eAII;AAAA,wDAAwB,QAAC,IAAD;AAAM,YAAA,EAAE,EAAC,iBAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAxB;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAVJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UAFJ;AAsBH,CA5DD;;KAAMF,K;AA8DN,eAAeA,KAAf","sourcesContent":["/* eslint-disable no-unused-expressions */\r\n/* eslint-disable no-sequences */\r\nimport React, { useState, useContext } from 'react';\r\nimport Axios from 'axios'\r\nimport { useHistory } from 'react-router';\r\nimport { Link } from 'react-router-dom';\r\nimport { BiLogInCircle } from \"react-icons/bi\";\r\nimport { toast } from \"react-toastify\"\r\nimport { AuthContext } from '../helpers/AuthContext'\r\n\r\nconst Login = ({ props, login }) => {\r\n    // const [email, setEmail] = useState(\"\");\r\n    // const [password, setPassword] = useState(\"\");\r\n    // const history = useHistory();\r\n    // const { setUserId } = useContext(AuthContext)\r\n\r\n    // const url = \"http://localhost:3002/auth\"\r\n\r\n\r\n    // const login = () => {\r\n    //     const data = { email: email, password: password }\r\n    //     Axios.post(url + \"/login\", data).then((response) => {\r\n    //         if (response.data.error) {\r\n    //             toast.warn(response.data.error)\r\n    //             // alert(response.data)\r\n    //             // if there is any error, don't create an accessToken to localstorage, else if any error doesn't exist, create accessToken\r\n    //             console.log(\"response if condition error: \", response.data.error);\r\n    //         }\r\n    //         else {\r\n    //             toast.success(response.data.message)\r\n    //             console.log(\"userData: \", response.data.id);\r\n    //             // setUserId(response.data.id)\r\n    //             localStorage.setItem(\"token\", response.data.token); //this comes from routes -> const accessToken -> res.json({token, username, id})\r\n    //             // const userData = {\r\n    //             //     id: response.data.id,\r\n    //             //     // name: response.data.name,\r\n    //             //     // email: response.data.email\r\n    //             // }\r\n    //             // localStorage.setItem(\"user\", JSON.stringify(userData));\r\n    //             redirect();\r\n    //         }\r\n    //     })\r\n    // }\r\n\r\n    // const redirect = () => {\r\n    //     history.push(\"/dashboard\")\r\n    // }\r\n\r\n    return (\r\n\r\n        <div className=\"container-bcg\">\r\n            <div className=\"form login-form d-flex flex-column justify-content-center\">\r\n                <div className=\"icon text-center\">\r\n                    <BiLogInCircle />\r\n                </div>\r\n                <h2 className=\"dark-blue\">Login</h2>\r\n                <div className=\"form-space\">\r\n                    <input type=\"text\" placeholder=\"Email\" onChange={(event) => { props.setEmail(event.target.value) }} />\r\n                    <input type=\"password\" placeholder=\"Password\" onChange={(event) => { props.setPassword(event.target.value) }} />\r\n\r\n                </div>\r\n                <div className=\"button-span text-center\">\r\n                    <div>\r\n                        <button onClick={login}>Login</button>\r\n                    </div>\r\n                    <span>Create an account <Link to=\"/create-account\">here</Link></span>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login\r\n"]},"metadata":{},"sourceType":"module"}