{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dell\\\\Desktop\\\\api\\\\notes-taker-fullstack\\\\notes-taker-client\\\\src\\\\components\\\\dashboard\\\\Dashboard.js\",\n    _s = $RefreshSig$();\n\n/* eslint-disable no-unused-vars */\nimport React, { useEffect, useState } from 'react';\nimport Axios from 'axios';\nimport { BrowserRouter as Router, Switch, Route, Link } from 'react-router-dom';\nimport MyNotes from './notes/MyNotes';\nimport AddNote from './notes/AddNote';\nimport { useHistory, useRouteMatch } from 'react-router';\nimport Home from './Home';\nimport Navbar from './Navbar';\nimport { AiFillFileAdd } from 'react-icons/ai';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Dashboard = () => {\n  _s();\n\n  const [user, setUser] = useState(\"\");\n  const userLoggedIn = localStorage.getItem(\"user\");\n  const [notes, setNotes] = useState([]);\n  const [date, setDate] = useState();\n  const url = \"http://localhost:3002\";\n  const token = localStorage.getItem(\"token\");\n  let history = useHistory();\n\n  const getUser = () => {\n    Axios.get(url + \"/auth\", {\n      headers: {\n        \"token\": `${token}`\n      }\n    }).then(response => {\n      // console.log(\"response\", response)\n      setUser(response);\n    });\n  };\n\n  const getNotes = () => {\n    Axios.get(url + \"/notes\", {\n      headers: {\n        \"token\": `${token}`\n      }\n    }).then(response => {\n      console.log(\"allNotes\", response.data);\n      let allNotes = response.data; // setNotes(allNotes);\n\n      let filteredNotes = allNotes.filter(eachNote => {\n        return eachNote.user === userLoggedIn;\n      });\n      setNotes(filteredNotes);\n      console.log(\"filteredNotes\", filteredNotes);\n\n      for (let i = 0; i < allNotes.length; i++) {\n        let dateFormat = allNotes[i].createdAt;\n        let date = new Date(dateFormat);\n        let year = date.getFullYear();\n        let month = date.getMonth() + 1;\n        let dt = date.getDate();\n\n        if (dt < 10) {\n          dt = '0' + dt;\n        }\n\n        if (month < 10) {\n          month = '0' + month;\n        }\n\n        let formattedDate = dt + \".\" + month + \".\" + year;\n        setDate(formattedDate);\n      }\n    });\n  };\n\n  const deleteNote = id => {\n    Axios.delete(url + `/notes/${id}`, {\n      headers: {\n        \"token\": `${token}`\n      }\n    }).then(response => {\n      setNotes(notes.filter(note => {\n        console.log(\"note from delete method \" + note.id);\n        return note.id !== id;\n      }));\n    });\n  };\n\n  const addNote = (title, description) => {\n    // console.log(e)\n    const data = {\n      title: title,\n      description: description\n    };\n    Axios.post(url + \"/notes/add-note\", data, {\n      headers: {\n        \"token\": localStorage.getItem(\"token\")\n      }\n    }).then(response => {\n      if (response.data.error) {\n        console.log(\"add note error \", response.data.error);\n      } else {\n        console.log(\"note added successfully \", response.data);\n        setNotes([...notes, {\n          id: response.data.id,\n          title: response.data.title,\n          description: response.data.description,\n          user: response.data.user,\n          createdAt: response.data.createdAt,\n          updatedAt: response.data.updatedAt\n        }]);\n        history.push(\"/dashboard/my-notes\");\n      }\n    });\n  };\n\n  console.log(\"NOTES NOTES\", notes);\n  useEffect(() => {\n    getUser();\n    getNotes(); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  let match = useRouteMatch();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"full-web-page d-flex\",\n    children: /*#__PURE__*/_jsxDEV(Router, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"left-sidebar\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"d-flex\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex-grow-1\",\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              to: `${match.url}/add-note`,\n              children: /*#__PURE__*/_jsxDEV(AiFillFileAdd, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 129,\n                columnNumber: 89\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 54\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              to: `${match.url}/my-notes`,\n              children: \"My notes\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 30\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dashboard d-flex flex-grow-1\",\n        children: /*#__PURE__*/_jsxDEV(Switch, {\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            exact: true,\n            path: `${match.path}`,\n            children: /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            exact: true,\n            path: `${match.path}/add-note`,\n            children: /*#__PURE__*/_jsxDEV(AddNote, {\n              addNote: addNote,\n              notes: notes\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            exact: true,\n            path: `${match.path}/my-notes`,\n            children: /*#__PURE__*/_jsxDEV(MyNotes, {\n              notes: notes,\n              deleteNote: deleteNote,\n              date: date\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            exact: true,\n            path: \"**\",\n            component: () => \"404 NOT FOUND\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"right-sidebar\",\n        children: /*#__PURE__*/_jsxDEV(Navbar, {\n          notes: notes\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 125,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Dashboard, \"J0y64UMXha/uhcnKqSTGnaUjuyg=\", false, function () {\n  return [useHistory, useRouteMatch];\n});\n\n_c = Dashboard;\nexport default Dashboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"sources":["C:/Users/Dell/Desktop/api/notes-taker-fullstack/notes-taker-client/src/components/dashboard/Dashboard.js"],"names":["React","useEffect","useState","Axios","BrowserRouter","Router","Switch","Route","Link","MyNotes","AddNote","useHistory","useRouteMatch","Home","Navbar","AiFillFileAdd","Dashboard","user","setUser","userLoggedIn","localStorage","getItem","notes","setNotes","date","setDate","url","token","history","getUser","get","headers","then","response","getNotes","console","log","data","allNotes","filteredNotes","filter","eachNote","i","length","dateFormat","createdAt","Date","year","getFullYear","month","getMonth","dt","getDate","formattedDate","deleteNote","id","delete","note","addNote","title","description","post","error","updatedAt","push","match","path"],"mappings":"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","sourcesContent":["/* eslint-disable no-unused-vars */\r\nimport React, { useEffect, useState } from 'react';\r\nimport Axios from 'axios'\r\nimport { BrowserRouter as Router, Switch, Route, Link } from 'react-router-dom'\r\nimport MyNotes from './notes/MyNotes'\r\nimport AddNote from './notes/AddNote'\r\nimport { useHistory, useRouteMatch } from 'react-router';\r\nimport Home from './Home';\r\nimport Navbar from './Navbar';\r\nimport { AiFillFileAdd } from 'react-icons/ai';\r\n\r\nconst Dashboard = () => {\r\n\r\n    const [user, setUser] = useState(\"\");\r\n    const userLoggedIn = localStorage.getItem(\"user\")\r\n    const [notes, setNotes] = useState([])\r\n    const [date, setDate] = useState();\r\n    const url = \"http://localhost:3002\";\r\n    const token = localStorage.getItem(\"token\");\r\n\r\n    let history = useHistory()\r\n\r\n    const getUser = () => {\r\n        Axios.get((url + \"/auth\"), {\r\n            headers: {\r\n                \"token\": `${token}`\r\n            }\r\n        }).then((response) => {\r\n            // console.log(\"response\", response)\r\n            setUser(response)\r\n        })\r\n    }\r\n\r\n    const getNotes = () => {\r\n        Axios.get((url + \"/notes\"), {\r\n            headers: {\r\n                \"token\": `${token}`\r\n            }\r\n        }).then((response) => {\r\n            console.log(\"allNotes\", response.data)\r\n            let allNotes = response.data;\r\n            // setNotes(allNotes);\r\n            let filteredNotes = allNotes.filter((eachNote) => {\r\n                return eachNote.user === userLoggedIn\r\n            })\r\n            setNotes(filteredNotes)\r\n            console.log(\"filteredNotes\", filteredNotes)\r\n\r\n            for (let i = 0; i < allNotes.length; i++) {\r\n                let dateFormat = allNotes[i].createdAt;\r\n\r\n                let date = new Date(dateFormat);\r\n                let year = date.getFullYear();\r\n                let month = date.getMonth() + 1;\r\n                let dt = date.getDate();\r\n\r\n                if (dt < 10) {\r\n                    dt = '0' + dt;\r\n                }\r\n                if (month < 10) {\r\n                    month = '0' + month;\r\n                }\r\n\r\n                let formattedDate = dt + \".\" + month + \".\" + year;\r\n                setDate(formattedDate);\r\n            }\r\n        })\r\n    }\r\n\r\n    const deleteNote = (id) => {\r\n        Axios.delete((url + `/notes/${id}`), {\r\n            headers: {\r\n                \"token\": `${token}`\r\n            }\r\n        }).then((response) => {\r\n            setNotes(notes.filter((note) => {\r\n                console.log(\"note from delete method \" + note.id)\r\n                return note.id !== id\r\n            }))\r\n        })\r\n    }\r\n\r\n    const addNote = (title, description) => {\r\n        // console.log(e)\r\n        const data = { title: title, description: description }\r\n\r\n        Axios.post(url + \"/notes/add-note\", data, {\r\n            headers: {\r\n                \"token\": localStorage.getItem(\"token\")\r\n            }\r\n        }).then((response) => {\r\n            if (response.data.error) {\r\n                console.log(\"add note error \", response.data.error)\r\n            }\r\n            else {\r\n                console.log(\"note added successfully \", response.data);\r\n                setNotes([...notes, {\r\n                    id: response.data.id,\r\n                    title: response.data.title,\r\n                    description: response.data.description,\r\n                    user: response.data.user,\r\n                    createdAt: response.data.createdAt,\r\n                    updatedAt: response.data.updatedAt\r\n                }])\r\n                history.push(\"/dashboard/my-notes\")\r\n            }\r\n        })\r\n    }\r\n    console.log(\"NOTES NOTES\", notes)\r\n\r\n    useEffect(() => {\r\n        getUser()\r\n        getNotes();\r\n\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [])\r\n\r\n\r\n\r\n\r\n\r\n    let match = useRouteMatch();\r\n\r\n    return (\r\n        <div className=\"full-web-page d-flex\">\r\n            <Router>\r\n                <div className=\"left-sidebar\">\r\n                    <div className=\"d-flex\">\r\n                        <div className=\"flex-grow-1\"><Link to={`${match.url}/add-note`}><AiFillFileAdd /></Link></div>\r\n                        <div><Link to={`${match.url}/my-notes`}>My notes</Link></div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"dashboard d-flex flex-grow-1\">\r\n                    {/* <button onClick={addNote}>Add note</button>\r\n                    <MyNotes />\r\n                    <button onClick={allNotes}>all notes</button> */}\r\n\r\n                    <Switch>\r\n                        <Route exact path={`${match.path}`}>\r\n                            <Home />\r\n                        </Route>\r\n                        <Route exact path={`${match.path}/add-note`}>\r\n                            <AddNote addNote={addNote} notes={notes} />\r\n                        </Route>\r\n                        <Route exact path={`${match.path}/my-notes`}>\r\n                            <MyNotes notes={notes} deleteNote={deleteNote} date={date} />\r\n                        </Route>\r\n                        <Route exact path=\"**\" component={() => \"404 NOT FOUND\"} />\r\n                    </Switch>\r\n                </div>\r\n                <div className=\"right-sidebar\">\r\n                    <Navbar notes={notes} />\r\n                </div>\r\n            </Router>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dashboard\r\n"]},"metadata":{},"sourceType":"module"}