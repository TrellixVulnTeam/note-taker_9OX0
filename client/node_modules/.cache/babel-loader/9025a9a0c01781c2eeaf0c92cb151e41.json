{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dell\\\\Desktop\\\\api\\\\notes-taker-fullstack\\\\notes-taker-client\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport { useEffect, useState, useContext } from 'react';\nimport { BrowserRouter as Router, Switch, Route, Link } from 'react-router-dom';\nimport Home from './components/Home';\nimport Login from './components/Login';\nimport SignUp from './components/SignUp';\nimport { AuthContext } from \"./helpers/AuthContext\";\nimport ProtectedRoutes from './protectedRoutes/ProtectedRoutes';\nimport Axios from 'axios';\nimport { useHistory } from 'react-router';\nimport Profile from './components/Profile';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [token, setToken] = useState(\"\");\n  const {\n    isLoggedIn,\n    setIsLoggedIn\n  } = useContext(AuthContext);\n  const history = useHistory();\n  const url = \"http://localhost:3002\";\n  useEffect(() => {\n    Axios.get(url, {\n      headers: {\n        accessToken: localStorage.getItem(\"accessToken\")\n      }\n    }).then(response => {\n      if (response.config.headers.accessToken) {\n        setToken(localStorage.getItem(\"accessToken\"));\n        setIsLoggedIn(true);\n        console.log(\"rrusponsi   \" + response.config.headers.accessToken);\n      } else {\n        console.log(\"error te responsi   \", response.data.error);\n        setIsLoggedIn(false);\n        console.log(\"is logged in  \", isLoggedIn);\n        history.push(\"/\");\n      } // console.log(\"isLoggedIn   \", isLoggedIn)\n      // else {\n      //   console.log(\"data- ----\", response.config.headers.accessToken)\n      //   console.log(\"responseeeee \", response)\n      //   // console.log(\"else is logged in \", isLoggedIn)\n      // }\n\n    }).catch(err => {\n      console.log(\"error login.js    \", err);\n    });\n  }, []); // useEffect(() => {\n  //   Axios.get(url, {\n  //     headers: {\n  //       accessToken: localStorage.getItem(\"accessToken\")\n  //     }\n  //   })\n  //     .then((response) => {\n  //       if (response.data.error) {\n  //         console.log(response.data.error)\n  //       }\n  //       else {\n  //         console.log(\"data- ----\", response.data)\n  //       }\n  //     })\n  // })\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n      value: {\n        token,\n        setToken,\n        isLoggedIn,\n        setIsLoggedIn\n      },\n      children: /*#__PURE__*/_jsxDEV(Router, {\n        children: /*#__PURE__*/_jsxDEV(Switch, {\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            path: \"/\",\n            exact: true,\n            component: Login\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/register\",\n            component: SignUp\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ProtectedRoutes, {\n            path: \"/home\",\n            exact: true,\n            component: Home\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ProtectedRoutes, {\n            path: \"/profile\",\n            exact: true,\n            component: Profile\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"yEQedqEasKQAxvMl5gCr++6fqH4=\", false, function () {\n  return [useHistory];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/Dell/Desktop/api/notes-taker-fullstack/notes-taker-client/src/App.js"],"names":["useEffect","useState","useContext","BrowserRouter","Router","Switch","Route","Link","Home","Login","SignUp","AuthContext","ProtectedRoutes","Axios","useHistory","Profile","App","token","setToken","isLoggedIn","setIsLoggedIn","history","url","get","headers","accessToken","localStorage","getItem","then","response","config","console","log","data","error","push","catch","err"],"mappings":";;;AAAA,OAAO,WAAP;AACA,SAASA,SAAT,EAAoBC,QAApB,EAA8BC,UAA9B,QAAgD,OAAhD;AACA,SAASC,aAAa,IAAIC,MAA1B,EAAkCC,MAAlC,EAA0CC,KAA1C,EAAiDC,IAAjD,QAA6D,kBAA7D;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,SAASC,WAAT,QAA4B,uBAA5B;AACA,OAAOC,eAAP,MAA4B,mCAA5B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,cAA3B;AACA,OAAOC,OAAP,MAAoB,sBAApB;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AAEb,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBjB,QAAQ,CAAC,EAAD,CAAlC;AAEA,QAAM;AAAEkB,IAAAA,UAAF;AAAcC,IAAAA;AAAd,MAAgClB,UAAU,CAACS,WAAD,CAAhD;AACA,QAAMU,OAAO,GAAGP,UAAU,EAA1B;AAEA,QAAMQ,GAAG,GAAG,uBAAZ;AAEAtB,EAAAA,SAAS,CAAC,MAAM;AACda,IAAAA,KAAK,CAACU,GAAN,CAAUD,GAAV,EAAe;AACbE,MAAAA,OAAO,EAAE;AACPC,QAAAA,WAAW,EAAEC,YAAY,CAACC,OAAb,CAAqB,aAArB;AADN;AADI,KAAf,EAKGC,IALH,CAKSC,QAAD,IAAc;AAClB,UAAIA,QAAQ,CAACC,MAAT,CAAgBN,OAAhB,CAAwBC,WAA5B,EAAyC;AACvCP,QAAAA,QAAQ,CAACQ,YAAY,CAACC,OAAb,CAAqB,aAArB,CAAD,CAAR;AACAP,QAAAA,aAAa,CAAC,IAAD,CAAb;AACAW,QAAAA,OAAO,CAACC,GAAR,CAAY,iBAAiBH,QAAQ,CAACC,MAAT,CAAgBN,OAAhB,CAAwBC,WAArD;AAED,OALD,MAMK;AACHM,QAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ,EAAoCH,QAAQ,CAACI,IAAT,CAAcC,KAAlD;AACAd,QAAAA,aAAa,CAAC,KAAD,CAAb;AACAW,QAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8Bb,UAA9B;AACAE,QAAAA,OAAO,CAACc,IAAR,CAAa,GAAb;AACD,OAZiB,CAalB;AAGA;AACA;AACA;AACA;AAEA;;AACD,KA3BH,EA4BGC,KA5BH,CA4BUC,GAAD,IAAS;AACdN,MAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ,EAAkCK,GAAlC;AACD,KA9BH;AA+BD,GAhCQ,EAgCN,EAhCM,CAAT,CATa,CA2Cb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA,sBACE;AAAA,2BACE,QAAC,WAAD,CAAa,QAAb;AAAsB,MAAA,KAAK,EAAE;AAAEpB,QAAAA,KAAF;AAASC,QAAAA,QAAT;AAAmBC,QAAAA,UAAnB;AAA+BC,QAAAA;AAA/B,OAA7B;AAAA,6BACE,QAAC,MAAD;AAAA,+BAOE,QAAC,MAAD;AAAA,kCACE,QAAC,KAAD;AAAO,YAAA,IAAI,EAAC,GAAZ;AAAgB,YAAA,KAAK,MAArB;AAAsB,YAAA,SAAS,EAAEX;AAAjC;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE,QAAC,KAAD;AAAO,YAAA,IAAI,EAAC,WAAZ;AAAwB,YAAA,SAAS,EAAEC;AAAnC;AAAA;AAAA;AAAA;AAAA,kBAFF,eAGE,QAAC,eAAD;AAAiB,YAAA,IAAI,EAAC,OAAtB;AAA8B,YAAA,KAAK,MAAnC;AAAoC,YAAA,SAAS,EAAEF;AAA/C;AAAA;AAAA;AAAA;AAAA,kBAHF,eAIE,QAAC,eAAD;AAAiB,YAAA,IAAI,EAAC,UAAtB;AAAiC,YAAA,KAAK,MAAtC;AAAuC,YAAA,SAAS,EAAEO;AAAlD;AAAA;AAAA;AAAA;AAAA,kBAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AAPF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAoBD;;GAhFQC,G;UAKSF,U;;;KALTE,G;AAkFT,eAAeA,GAAf","sourcesContent":["import './App.css';\r\nimport { useEffect, useState, useContext } from 'react'\r\nimport { BrowserRouter as Router, Switch, Route, Link } from 'react-router-dom'\r\nimport Home from './components/Home'\r\nimport Login from './components/Login'\r\nimport SignUp from './components/SignUp';\r\nimport { AuthContext } from \"./helpers/AuthContext\";\r\nimport ProtectedRoutes from './protectedRoutes/ProtectedRoutes';\r\nimport Axios from 'axios'\r\nimport { useHistory } from 'react-router';\r\nimport Profile from './components/Profile';\r\n\r\nfunction App() {\r\n\r\n  const [token, setToken] = useState(\"\")\r\n\r\n  const { isLoggedIn, setIsLoggedIn } = useContext(AuthContext);\r\n  const history = useHistory()\r\n\r\n  const url = \"http://localhost:3002\"\r\n\r\n  useEffect(() => {\r\n    Axios.get(url, {\r\n      headers: {\r\n        accessToken: localStorage.getItem(\"accessToken\")\r\n      }\r\n    })\r\n      .then((response) => {\r\n        if (response.config.headers.accessToken) {\r\n          setToken(localStorage.getItem(\"accessToken\"))\r\n          setIsLoggedIn(true)\r\n          console.log(\"rrusponsi   \" + response.config.headers.accessToken)\r\n\r\n        }\r\n        else {\r\n          console.log(\"error te responsi   \", response.data.error)\r\n          setIsLoggedIn(false)\r\n          console.log(\"is logged in  \", isLoggedIn)\r\n          history.push(\"/\")\r\n        }\r\n        // console.log(\"isLoggedIn   \", isLoggedIn)\r\n\r\n\r\n        // else {\r\n        //   console.log(\"data- ----\", response.config.headers.accessToken)\r\n        //   console.log(\"responseeeee \", response)\r\n        //   // console.log(\"else is logged in \", isLoggedIn)\r\n\r\n        // }\r\n      })\r\n      .catch((err) => {\r\n        console.log(\"error login.js    \", err)\r\n      })\r\n  }, [])\r\n\r\n  // useEffect(() => {\r\n  //   Axios.get(url, {\r\n  //     headers: {\r\n  //       accessToken: localStorage.getItem(\"accessToken\")\r\n  //     }\r\n  //   })\r\n  //     .then((response) => {\r\n  //       if (response.data.error) {\r\n  //         console.log(response.data.error)\r\n  //       }\r\n  //       else {\r\n  //         console.log(\"data- ----\", response.data)\r\n  //       }\r\n  //     })\r\n  // })\r\n\r\n\r\n  return (\r\n    <div>\r\n      <AuthContext.Provider value={{ token, setToken, isLoggedIn, setIsLoggedIn }}>\r\n        <Router>\r\n          {/* {\r\n            !isLoggedIn ? (\r\n              <>\r\n                <Link to=\"/login\">Login</Link>\r\n                <Link to=\"/register\">Sign up</Link>\r\n              </>) : (<button>Log out</button>)} */}\r\n          <Switch>\r\n            <Route path=\"/\" exact component={Login} />\r\n            <Route path=\"/register\" component={SignUp} />\r\n            <ProtectedRoutes path=\"/home\" exact component={Home} />\r\n            <ProtectedRoutes path=\"/profile\" exact component={Profile} />\r\n          </Switch>\r\n        </Router>\r\n      </AuthContext.Provider>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}