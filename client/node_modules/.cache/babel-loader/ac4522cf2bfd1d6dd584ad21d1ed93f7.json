{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dell\\\\Desktop\\\\api\\\\notes-taker-fullstack\\\\notes-taker-client\\\\src\\\\protectedRoutes\\\\ProtectedRoutes.js\";\nimport React, { useContext } from 'react';\nimport { Route, Redirect } from 'react-router-dom'; // import { AuthContext } from '../helpers/AuthContext'\n\nimport jwt_decode from \"jwt-decode\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ProtectedRoutes = ({\n  component: Component,\n  ...rest\n}) => {\n  // const { setToken, token } = useContext(AuthContext);\n  // const isAuthenticated = localStorage.getItem(\"token\");\n  // // console.log(\"this\", isAuthenticated);\n  // var loggedIn = false;\n  // if (isAuthenticated) {\n  //   const jwt_token = jwt_decode(isAuthenticated);\n  //   loggedIn = +new Date(+jwt_token.exp * 1000) > +new Date();\n  //   if (!loggedIn) localStorage.removeItem(\"token\");\n  // }\n  const accessToken = localStorage.getItem(\"token\");\n  console.log(\"this \", accessToken);\n  return /*#__PURE__*/_jsxDEV(Route, { ...rest,\n    render: props => accessToken ? /*#__PURE__*/_jsxDEV(Component, { ...props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 47\n    }, this) : /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 76\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 9\n  }, this);\n};\n\n_c = ProtectedRoutes;\nexport default ProtectedRoutes;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProtectedRoutes\");","map":{"version":3,"sources":["C:/Users/Dell/Desktop/api/notes-taker-fullstack/notes-taker-client/src/protectedRoutes/ProtectedRoutes.js"],"names":["React","useContext","Route","Redirect","jwt_decode","ProtectedRoutes","component","Component","rest","accessToken","localStorage","getItem","console","log","props"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,kBAAhC,C,CACA;;AACA,OAAOC,UAAP,MAAuB,YAAvB;;;AACA,MAAMC,eAAe,GAAG,CAAC;AAAEC,EAAAA,SAAS,EAAEC,SAAb;AAAwB,KAAGC;AAA3B,CAAD,KAAuC;AAC3D;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,QAAMC,WAAW,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAApB;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBJ,WAArB;AAEA,sBACI,QAAC,KAAD,OACQD,IADR;AAEI,IAAA,MAAM,EAAGM,KAAD,IAAWL,WAAW,gBAAI,QAAC,SAAD,OAAeK;AAAf;AAAA;AAAA;AAAA;AAAA,YAAJ,gBAAiC,QAAC,QAAD;AAAU,MAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA;AAFnE;AAAA;AAAA;AAAA;AAAA,UADJ;AAMH,CArBD;;KAAMT,e;AAuBN,eAAeA,eAAf","sourcesContent":["import React, { useContext } from 'react'\r\nimport { Route, Redirect } from 'react-router-dom';\r\n// import { AuthContext } from '../helpers/AuthContext'\r\nimport jwt_decode from \"jwt-decode\";\r\nconst ProtectedRoutes = ({ component: Component, ...rest }) => {\r\n    // const { setToken, token } = useContext(AuthContext);\r\n\r\n    // const isAuthenticated = localStorage.getItem(\"token\");\r\n    // // console.log(\"this\", isAuthenticated);\r\n    // var loggedIn = false;\r\n    // if (isAuthenticated) {\r\n    //   const jwt_token = jwt_decode(isAuthenticated);\r\n    //   loggedIn = +new Date(+jwt_token.exp * 1000) > +new Date();\r\n    //   if (!loggedIn) localStorage.removeItem(\"token\");\r\n    // }\r\n\r\n    const accessToken = localStorage.getItem(\"token\")\r\n    console.log(\"this \", accessToken)\r\n\r\n    return (\r\n        <Route\r\n            {...rest}\r\n            render={(props) => accessToken ? (<Component {...props} />) : (<Redirect to=\"/\" />)}\r\n        />\r\n    )\r\n}\r\n\r\nexport default ProtectedRoutes\r\n\r\n"]},"metadata":{},"sourceType":"module"}