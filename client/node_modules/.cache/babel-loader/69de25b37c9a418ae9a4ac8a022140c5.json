{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dell\\\\Desktop\\\\api\\\\notes-taker-fullstack\\\\notes-taker-client\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport { useEffect, useState } from 'react';\nimport { BrowserRouter as Router, Switch, Route, Link } from 'react-router-dom';\nimport Home from './components/Home';\nimport Login from './components/Login';\nimport SignUp from './components/SignUp';\nimport { AuthContext } from \"./helpers/AuthContext\";\nimport ProtectedRoute from \"./protectedRoutes/ProtectedRoutes\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  useEffect(() => {\n    localStorage.getItem(\"accessToken\");\n  }, []);\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n\n  const logout = () => {\n    if (!lc_true) {\n      setIsLoggedIn(false);\n      console.log(\"false  +++\" + isLoggedIn);\n    } else {\n      localStorage.removeItem(\"accessToken\");\n      setIsLoggedIn(true);\n      console.log(\"true +++\" + isLoggedIn);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n      value: {\n        isLoggedIn,\n        setIsLoggedIn\n      },\n      children: /*#__PURE__*/_jsxDEV(Router, {\n        children: [!isLoggedIn ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Link, {\n            to: \"/\",\n            children: \"Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/register\",\n            children: \"Sign up\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: logout,\n          children: \"Log out\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 23\n        }, this), /*#__PURE__*/_jsxDEV(Switch, {\n          children: [/*#__PURE__*/_jsxDEV(ProtectedRoute, {\n            exact: true,\n            path: \"/dashboard\",\n            component: Home\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/\",\n            component: Login\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/register\",\n            component: SignUp\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"RXEREhPqr8kHjAVNGqMY927UGB0=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/Dell/Desktop/api/notes-taker-fullstack/notes-taker-client/src/App.js"],"names":["useEffect","useState","BrowserRouter","Router","Switch","Route","Link","Home","Login","SignUp","AuthContext","ProtectedRoute","App","localStorage","getItem","isLoggedIn","setIsLoggedIn","logout","lc_true","console","log","removeItem"],"mappings":";;;AAAA,OAAO,WAAP;AACA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,aAAa,IAAIC,MAA1B,EAAkCC,MAAlC,EAA0CC,KAA1C,EAAiDC,IAAjD,QAA6D,kBAA7D;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,SAASC,WAAT,QAA4B,uBAA5B;AACA,OAAOC,cAAP,MAA2B,mCAA3B;;;;AACA,SAASC,GAAT,GAAe;AAAA;;AAGbZ,EAAAA,SAAS,CAAC,MAAM;AACda,IAAAA,YAAY,CAACC,OAAb,CAAqB,aAArB;AACD,GAFQ,EAEN,EAFM,CAAT;AAIA,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8Bf,QAAQ,CAAC,KAAD,CAA5C;;AAEA,QAAMgB,MAAM,GAAG,MAAM;AACnB,QAAI,CAACC,OAAL,EAAc;AACZF,MAAAA,aAAa,CAAC,KAAD,CAAb;AACAG,MAAAA,OAAO,CAACC,GAAR,CAAY,eAAeL,UAA3B;AACD,KAHD,MAIK;AACHF,MAAAA,YAAY,CAACQ,UAAb,CAAwB,aAAxB;AACAL,MAAAA,aAAa,CAAC,IAAD,CAAb;AACAG,MAAAA,OAAO,CAACC,GAAR,CAAY,aAAaL,UAAzB;AACD;AACF,GAVD;;AAcA,sBACE;AAAA,2BACE,QAAC,WAAD,CAAa,QAAb;AAAsB,MAAA,KAAK,EAAE;AAAEA,QAAAA,UAAF;AAAcC,QAAAA;AAAd,OAA7B;AAAA,6BACE,QAAC,MAAD;AAAA,mBAEI,CAACD,UAAD,gBACE;AAAA,kCACE,QAAC,IAAD;AAAM,YAAA,EAAE,EAAC,GAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE,QAAC,IAAD;AAAM,YAAA,EAAE,EAAC,WAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA,wBADF,gBAIU;AAAQ,UAAA,OAAO,EAAEE,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBANd,eAOE,QAAC,MAAD;AAAA,kCACE,QAAC,cAAD;AAAgB,YAAA,KAAK,MAArB;AAAsB,YAAA,IAAI,EAAC,YAA3B;AAAwC,YAAA,SAAS,EAAEV;AAAnD;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE,QAAC,KAAD;AAAO,YAAA,IAAI,EAAC,GAAZ;AAAgB,YAAA,SAAS,EAAEC;AAA3B;AAAA;AAAA;AAAA;AAAA,kBAFF,eAGE,QAAC,KAAD;AAAO,YAAA,IAAI,EAAC,WAAZ;AAAwB,YAAA,SAAS,EAAEC;AAAnC;AAAA;AAAA;AAAA;AAAA,kBAHF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAPF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAmBD;;GA1CQG,G;;KAAAA,G;AA4CT,eAAeA,GAAf","sourcesContent":["import './App.css';\nimport { useEffect, useState } from 'react'\nimport { BrowserRouter as Router, Switch, Route, Link } from 'react-router-dom'\nimport Home from './components/Home'\nimport Login from './components/Login'\nimport SignUp from './components/SignUp';\nimport { AuthContext } from \"./helpers/AuthContext\";\nimport ProtectedRoute from \"./protectedRoutes/ProtectedRoutes\";\nfunction App() {\n\n\n  useEffect(() => {\n    localStorage.getItem(\"accessToken\");\n  }, [])\n\n  const [isLoggedIn, setIsLoggedIn] = useState(false)\n\n  const logout = () => {\n    if (!lc_true) {\n      setIsLoggedIn(false);\n      console.log(\"false  +++\" + isLoggedIn)\n    }\n    else {\n      localStorage.removeItem(\"accessToken\");\n      setIsLoggedIn(true);\n      console.log(\"true +++\" + isLoggedIn)\n    }\n  }\n\n\n\n  return (\n    <div>\n      <AuthContext.Provider value={{ isLoggedIn, setIsLoggedIn }}>\n        <Router>\n          {\n            !isLoggedIn ? (\n              <>\n                <Link to=\"/\">Login</Link>\n                <Link to=\"/register\">Sign up</Link>\n              </>) : (<button onClick={logout}>Log out</button>)}\n          <Switch>\n            <ProtectedRoute exact path=\"/dashboard\" component={Home} />\n            <Route path=\"/\" component={Login} />\n            <Route path=\"/register\" component={SignUp} />\n          </Switch>\n        </Router>\n      </AuthContext.Provider>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}