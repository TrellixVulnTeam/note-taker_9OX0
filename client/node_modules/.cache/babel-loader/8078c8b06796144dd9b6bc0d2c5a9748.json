{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dell\\\\Desktop\\\\api\\\\notes-taker-fullstack\\\\notes-taker-client\\\\src\\\\components\\\\dashboard\\\\notes\\\\MyNotes.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport Axios from 'axios';\nimport Edit from '../../Buttons/Edit';\nimport Delete from '../../Buttons/Delete';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MyNotes = () => {\n  _s();\n\n  const url = \"http://localhost:3002/notes\";\n  const token = localStorage.getItem(\"token\");\n  const userLoggedIn = localStorage.getItem(\"user\");\n  const [notes, setNotes] = useState([]);\n  const [date, setDate] = useState();\n\n  const getNotes = () => {\n    Axios.get(url, {\n      headers: {\n        \"token\": `${token}`\n      }\n    }).then(response => {\n      console.log(\"notes \", response.data); // if(userLoggedIn === response.data.)\n      // setNotes(response.data)\n      // const date = Date.parse(response.data.createdAt)\n\n      let allNotes = response.data; // setNotes(allNotes);\n\n      let filteredNotes = allNotes.filter(eachNote => {\n        return e;\n      });\n      console.log(\"allllllll\", allNotes); // for (let i = 0; i < allNotes.length; i++) {\n      //     // const filterNotes = allNotes[i].filter()\n      //     // console.log(allNotes[i].createdAt)\n      //     let dateFormat = allNotes[i].createdAt;\n      //     let date = new Date(dateFormat);\n      //     let year = date.getFullYear();\n      //     let month = date.getMonth() + 1;\n      //     let dt = date.getDate();\n      //     if (dt < 10) {\n      //         dt = '0' + dt;\n      //     }\n      //     if (month < 10) {\n      //         month = '0' + month;\n      //     }\n      //     let formattedDate = dt + \".\" + month + \".\" + year;\n      //     setDate(formattedDate);\n      // }\n    });\n  };\n\n  const editNote = id => {\n    console.log(id);\n  };\n\n  const deleteNote = id => {\n    Axios.delete(url + `/${id}`, {\n      headers: {\n        \"token\": `${token}`\n      }\n    }).then(response => {\n      setNotes(notes.filter(note => {\n        console.log(\"note from delete method \" + note.id);\n        return note.id !== id;\n      }));\n    });\n  };\n\n  useEffect(() => {\n    getNotes();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"my-notes\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"My notes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }, this), notes.map(note => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: note.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: note.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: note.createdAt\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: date\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Edit, {\n          editNote: () => editNote(note.id)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Delete, {\n          deleteNote: () => deleteNote(note.id)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 25\n        }, this)]\n      }, note.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 28\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 9\n  }, this);\n};\n\n_s(MyNotes, \"jRW3Y3fr6ZlFp2keO8s16Oiihw0=\");\n\n_c = MyNotes;\nexport default MyNotes;\n\nvar _c;\n\n$RefreshReg$(_c, \"MyNotes\");","map":{"version":3,"sources":["C:/Users/Dell/Desktop/api/notes-taker-fullstack/notes-taker-client/src/components/dashboard/notes/MyNotes.js"],"names":["React","useEffect","useState","Axios","Edit","Delete","MyNotes","url","token","localStorage","getItem","userLoggedIn","notes","setNotes","date","setDate","getNotes","get","headers","then","response","console","log","data","allNotes","filteredNotes","filter","eachNote","e","editNote","id","deleteNote","delete","note","map","title","description","createdAt"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;;;AAEA,MAAMC,OAAO,GAAG,MAAM;AAAA;;AAElB,QAAMC,GAAG,GAAG,6BAAZ;AACA,QAAMC,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAd;AACA,QAAMC,YAAY,GAAGF,YAAY,CAACC,OAAb,CAAqB,MAArB,CAArB;AACA,QAAM,CAACE,KAAD,EAAQC,QAAR,IAAoBX,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACY,IAAD,EAAOC,OAAP,IAAkBb,QAAQ,EAAhC;;AAEA,QAAMc,QAAQ,GAAG,MAAM;AACnBb,IAAAA,KAAK,CAACc,GAAN,CAAWV,GAAX,EAAiB;AACbW,MAAAA,OAAO,EAAE;AACL,iBAAU,GAAEV,KAAM;AADb;AADI,KAAjB,EAIGW,IAJH,CAISC,QAAD,IAAc;AAClBC,MAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBF,QAAQ,CAACG,IAA/B,EADkB,CAGlB;AAEA;AACA;;AAEA,UAAIC,QAAQ,GAAGJ,QAAQ,CAACG,IAAxB,CARkB,CASlB;;AACA,UAAIE,aAAa,GAAGD,QAAQ,CAACE,MAAT,CAAiBC,QAAD,IAAc;AAC9C,eAAOC,CAAP;AACH,OAFmB,CAApB;AAIAP,MAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBE,QAAzB,EAdkB,CAkBlB;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACH,KA5CD;AA6CH,GA9CD;;AAgDA,QAAMK,QAAQ,GAAIC,EAAD,IAAQ;AACrBT,IAAAA,OAAO,CAACC,GAAR,CAAYQ,EAAZ;AACH,GAFD;;AAIA,QAAMC,UAAU,GAAID,EAAD,IAAQ;AACvB3B,IAAAA,KAAK,CAAC6B,MAAN,CAAczB,GAAG,GAAI,IAAGuB,EAAG,EAA3B,EAA+B;AAC3BZ,MAAAA,OAAO,EAAE;AACL,iBAAU,GAAEV,KAAM;AADb;AADkB,KAA/B,EAIGW,IAJH,CAISC,QAAD,IAAc;AAClBP,MAAAA,QAAQ,CAACD,KAAK,CAACc,MAAN,CAAcO,IAAD,IAAU;AAC5BZ,QAAAA,OAAO,CAACC,GAAR,CAAY,6BAA6BW,IAAI,CAACH,EAA9C;AACA,eAAOG,IAAI,CAACH,EAAL,KAAYA,EAAnB;AACH,OAHQ,CAAD,CAAR;AAIH,KATD;AAUH,GAXD;;AAaA7B,EAAAA,SAAS,CAAC,MAAM;AACZe,IAAAA,QAAQ;AACX,GAFQ,EAEN,EAFM,CAAT;AAIA,sBACI;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,EAGQJ,KAAK,CAACsB,GAAN,CAAWD,IAAD,IAAU;AAChB,0BAAO;AAAA,gCACH;AAAA,oBAAKA,IAAI,CAACE;AAAV;AAAA;AAAA;AAAA;AAAA,gBADG,eAEH;AAAA,oBAAMF,IAAI,CAACG;AAAX;AAAA;AAAA;AAAA;AAAA,gBAFG,eAGH;AAAA,oBAAMH,IAAI,CAACI;AAAX;AAAA;AAAA;AAAA;AAAA,gBAHG,eAIH;AAAA,oBAAMvB;AAAN;AAAA;AAAA;AAAA;AAAA,gBAJG,eAKH,QAAC,IAAD;AAAM,UAAA,QAAQ,EAAE,MAAMe,QAAQ,CAACI,IAAI,CAACH,EAAN;AAA9B;AAAA;AAAA;AAAA;AAAA,gBALG,eAMH,QAAC,MAAD;AAAQ,UAAA,UAAU,EAAE,MAAMC,UAAU,CAACE,IAAI,CAACH,EAAN;AAApC;AAAA;AAAA;AAAA;AAAA,gBANG;AAAA,SAAUG,IAAI,CAACH,EAAf;AAAA;AAAA;AAAA;AAAA,cAAP;AAQH,KATD,CAHR;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAiBH,CA9FD;;GAAMxB,O;;KAAAA,O;AAgGN,eAAeA,OAAf","sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport Axios from 'axios'\r\nimport Edit from '../../Buttons/Edit'\r\nimport Delete from '../../Buttons/Delete'\r\n\r\nconst MyNotes = () => {\r\n\r\n    const url = \"http://localhost:3002/notes\";\r\n    const token = localStorage.getItem(\"token\");\r\n    const userLoggedIn = localStorage.getItem(\"user\")\r\n    const [notes, setNotes] = useState([])\r\n    const [date, setDate] = useState();\r\n\r\n    const getNotes = () => {\r\n        Axios.get((url), {\r\n            headers: {\r\n                \"token\": `${token}`\r\n            }\r\n        }).then((response) => {\r\n            console.log(\"notes \", response.data);\r\n\r\n            // if(userLoggedIn === response.data.)\r\n\r\n            // setNotes(response.data)\r\n            // const date = Date.parse(response.data.createdAt)\r\n\r\n            let allNotes = response.data;\r\n            // setNotes(allNotes);\r\n            let filteredNotes = allNotes.filter((eachNote) => {\r\n                return e\r\n            })\r\n\r\n            console.log(\"allllllll\", allNotes)\r\n\r\n\r\n\r\n            // for (let i = 0; i < allNotes.length; i++) {\r\n\r\n            //     // const filterNotes = allNotes[i].filter()\r\n            //     // console.log(allNotes[i].createdAt)\r\n            //     let dateFormat = allNotes[i].createdAt;\r\n\r\n            //     let date = new Date(dateFormat);\r\n            //     let year = date.getFullYear();\r\n            //     let month = date.getMonth() + 1;\r\n            //     let dt = date.getDate();\r\n\r\n            //     if (dt < 10) {\r\n            //         dt = '0' + dt;\r\n            //     }\r\n            //     if (month < 10) {\r\n            //         month = '0' + month;\r\n            //     }\r\n\r\n\r\n            //     let formattedDate = dt + \".\" + month + \".\" + year;\r\n            //     setDate(formattedDate);\r\n            // }\r\n        })\r\n    }\r\n\r\n    const editNote = (id) => {\r\n        console.log(id)\r\n    }\r\n\r\n    const deleteNote = (id) => {\r\n        Axios.delete((url + `/${id}`), {\r\n            headers: {\r\n                \"token\": `${token}`\r\n            }\r\n        }).then((response) => {\r\n            setNotes(notes.filter((note) => {\r\n                console.log(\"note from delete method \" + note.id)\r\n                return note.id !== id\r\n            }))\r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n        getNotes();\r\n    }, [])\r\n\r\n    return (\r\n        <div className=\"my-notes\">\r\n            <h1>My notes</h1>\r\n            {\r\n                notes.map((note) => {\r\n                    return <div key={note.id}>\r\n                        <h3>{note.title}</h3>\r\n                        <div>{note.description}</div>\r\n                        <div>{note.createdAt}</div>\r\n                        <div>{date}</div>\r\n                        <Edit editNote={() => editNote(note.id)} />\r\n                        <Delete deleteNote={() => deleteNote(note.id)} />\r\n                    </div>\r\n                })\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MyNotes\r\n"]},"metadata":{},"sourceType":"module"}