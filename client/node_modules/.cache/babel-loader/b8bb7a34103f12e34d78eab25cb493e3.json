{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dell\\\\Desktop\\\\api\\\\notes-taker-fullstack\\\\notes-taker-client\\\\src\\\\components\\\\dashboard\\\\notes\\\\MyNotes.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport Axios from 'axios';\nimport Edit from '../../Buttons/Edit';\nimport Delete from '../../Buttons/Delete';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MyNotes = () => {\n  _s();\n\n  const url = \"http://localhost:3002/notes\";\n  const token = localStorage.getItem(\"token\");\n  const userLoggedIn = localStorage.getItem(\"user\");\n  const [notes, setNotes] = useState([]);\n  const [date, setDate] = useState();\n\n  const getNotes = () => {\n    Axios.get(url, {\n      headers: {\n        \"token\": `${token}`\n      }\n    }).then(response => {\n      console.log(\"notes \", response.data); // const date = Date.parse(response.data.createdAt)\n\n      let allNotes = response.data;\n\n      for (let i = 0; i < allNotes.length; i++) {\n        if (userLoggedIn === response.data.user) {\n          setNotes(response.data); // console.log(allNotes[i].createdAt)\n\n          let dateFormat = allNotes[i].createdAt;\n          let date = new Date(dateFormat);\n          let year = date.getFullYear();\n          let month = date.getMonth() + 1;\n          let dt = date.getDate();\n\n          if (dt < 10) {\n            dt = '0' + dt;\n          }\n\n          if (month < 10) {\n            month = '0' + month;\n          }\n\n          let formattedDate = dt + \".\" + month + \".\" + year;\n          setDate(formattedDate);\n        } else {\n          localStorage.removeItem(\"token\");\n        }\n      }\n    });\n  };\n\n  const editNote = id => {\n    console.log(id);\n  };\n\n  const deleteNote = id => {\n    Axios.delete(url + `/${id}`, {\n      headers: {\n        \"token\": `${token}`\n      }\n    }).then(response => {\n      setNotes(notes.filter(note => {\n        console.log(\"note from delete method \" + note.id);\n        return note.id !== id;\n      }));\n    });\n  };\n\n  useEffect(() => {\n    getNotes();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"my-notes\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"My notes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this), notes.map(note => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: note.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: note.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: note.createdAt\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: date\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Edit, {\n          editNote: () => editNote(note.id)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Delete, {\n          deleteNote: () => deleteNote(note.id)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 25\n        }, this)]\n      }, note.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 28\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 9\n  }, this);\n};\n\n_s(MyNotes, \"jRW3Y3fr6ZlFp2keO8s16Oiihw0=\");\n\n_c = MyNotes;\nexport default MyNotes;\n\nvar _c;\n\n$RefreshReg$(_c, \"MyNotes\");","map":{"version":3,"sources":["C:/Users/Dell/Desktop/api/notes-taker-fullstack/notes-taker-client/src/components/dashboard/notes/MyNotes.js"],"names":["React","useEffect","useState","Axios","Edit","Delete","MyNotes","url","token","localStorage","getItem","userLoggedIn","notes","setNotes","date","setDate","getNotes","get","headers","then","response","console","log","data","allNotes","i","length","user","dateFormat","createdAt","Date","year","getFullYear","month","getMonth","dt","getDate","formattedDate","removeItem","editNote","id","deleteNote","delete","filter","note","map","title","description"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport Axios from 'axios'\r\nimport Edit from '../../Buttons/Edit'\r\nimport Delete from '../../Buttons/Delete'\r\n\r\nconst MyNotes = () => {\r\n\r\n    const url = \"http://localhost:3002/notes\";\r\n    const token = localStorage.getItem(\"token\");\r\n    const userLoggedIn = localStorage.getItem(\"user\")\r\n    const [notes, setNotes] = useState([])\r\n    const [date, setDate] = useState();\r\n\r\n    const getNotes = () => {\r\n        Axios.get((url), {\r\n            headers: {\r\n                \"token\": `${token}`\r\n            }\r\n        }).then((response) => {\r\n            console.log(\"notes \", response.data);\r\n\r\n\r\n            // const date = Date.parse(response.data.createdAt)\r\n\r\n            let allNotes = response.data;\r\n            for (let i = 0; i < allNotes.length; i++) {\r\n                if (userLoggedIn === response.data.user) {\r\n                    setNotes(response.data)\r\n                    // console.log(allNotes[i].createdAt)\r\n                    let dateFormat = allNotes[i].createdAt;\r\n\r\n                    let date = new Date(dateFormat);\r\n                    let year = date.getFullYear();\r\n                    let month = date.getMonth() + 1;\r\n                    let dt = date.getDate();\r\n\r\n                    if (dt < 10) {\r\n                        dt = '0' + dt;\r\n                    }\r\n                    if (month < 10) {\r\n                        month = '0' + month;\r\n                    }\r\n\r\n\r\n                    let formattedDate = dt + \".\" + month + \".\" + year;\r\n                    setDate(formattedDate);\r\n                }\r\n                else {\r\n                    localStorage.removeItem(\"token\")\r\n                }\r\n\r\n            }\r\n        })\r\n    }\r\n\r\n    const editNote = (id) => {\r\n        console.log(id)\r\n    }\r\n\r\n    const deleteNote = (id) => {\r\n        Axios.delete((url + `/${id}`), {\r\n            headers: {\r\n                \"token\": `${token}`\r\n            }\r\n        }).then((response) => {\r\n            setNotes(notes.filter((note) => {\r\n                console.log(\"note from delete method \" + note.id)\r\n                return note.id !== id\r\n            }))\r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n        getNotes();\r\n    }, [])\r\n\r\n    return (\r\n        <div className=\"my-notes\">\r\n            <h1>My notes</h1>\r\n            {\r\n                notes.map((note) => {\r\n                    return <div key={note.id}>\r\n                        <h3>{note.title}</h3>\r\n                        <div>{note.description}</div>\r\n                        <div>{note.createdAt}</div>\r\n                        <div>{date}</div>\r\n                        <Edit editNote={() => editNote(note.id)} />\r\n                        <Delete deleteNote={() => deleteNote(note.id)} />\r\n                    </div>\r\n                })\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MyNotes\r\n"]},"metadata":{},"sourceType":"module"}