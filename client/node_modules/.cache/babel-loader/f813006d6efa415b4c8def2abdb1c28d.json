{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dell\\\\Desktop\\\\api\\\\notes-taker-fullstack\\\\notes-taker-client\\\\src\\\\protectedRoutes\\\\ProtectedRoutes.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext } from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { AuthContext } from '../helpers/AuthContext';\nimport jwt_decode from \"jwt-decode\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ProtectedRoutes = ({\n  component: Component,\n  ...rest\n}) => {\n  _s();\n\n  const {\n    setToken\n  } = useContext(AuthContext);\n  const isAuthenticated = localStorage.getItem(\"token\");\n  console.log(\"this\", isAuthenticated);\n  var loggedIn = false;\n\n  if (isAuthenticated) {\n    const jwt_token = jwt_decode(isAuthenticated);\n    loggedIn = +new Date(+jwt_token.exp * 1000) > +new Date();\n    if (!loggedIn) localStorage.removeItem(\"token\");\n  }\n\n  return /*#__PURE__*/_jsxDEV(Route, { ...rest,\n    render: props => setToken ? /*#__PURE__*/_jsxDEV(Component, { ...props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 44\n    }, this) : /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 73\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ProtectedRoutes, \"8hGQYmpV1PN5rQEgO1Pz3ThbB74=\");\n\n_c = ProtectedRoutes;\nexport default ProtectedRoutes;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProtectedRoutes\");","map":{"version":3,"sources":["C:/Users/Dell/Desktop/api/notes-taker-fullstack/notes-taker-client/src/protectedRoutes/ProtectedRoutes.js"],"names":["React","useContext","Route","Redirect","AuthContext","jwt_decode","ProtectedRoutes","component","Component","rest","setToken","isAuthenticated","localStorage","getItem","console","log","loggedIn","jwt_token","Date","exp","removeItem","props"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,kBAAhC;AACA,SAASC,WAAT,QAA4B,wBAA5B;AACA,OAAOC,UAAP,MAAuB,YAAvB;;;AACA,MAAMC,eAAe,GAAG,CAAC;AAAEC,EAAAA,SAAS,EAAEC,SAAb;AAAwB,KAAGC;AAA3B,CAAD,KAAuC;AAAA;;AAC3D,QAAM;AAAEC,IAAAA;AAAF,MAAeT,UAAU,CAACG,WAAD,CAA/B;AAEA,QAAMO,eAAe,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAxB;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBJ,eAApB;AACA,MAAIK,QAAQ,GAAG,KAAf;;AACA,MAAIL,eAAJ,EAAqB;AACjB,UAAMM,SAAS,GAAGZ,UAAU,CAACM,eAAD,CAA5B;AACAK,IAAAA,QAAQ,GAAG,CAAC,IAAIE,IAAJ,CAAS,CAACD,SAAS,CAACE,GAAX,GAAiB,IAA1B,CAAD,GAAmC,CAAC,IAAID,IAAJ,EAA/C;AACA,QAAI,CAACF,QAAL,EAAeJ,YAAY,CAACQ,UAAb,CAAwB,OAAxB;AAClB;;AAED,sBACI,QAAC,KAAD,OACQX,IADR;AAEI,IAAA,MAAM,EAAGY,KAAD,IAAWX,QAAQ,gBAAI,QAAC,SAAD,OAAeW;AAAf;AAAA;AAAA;AAAA;AAAA,YAAJ,gBAAiC,QAAC,QAAD;AAAU,MAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA;AAFhE;AAAA;AAAA;AAAA;AAAA,UADJ;AAMH,CAlBD;;GAAMf,e;;KAAAA,e;AAoBN,eAAeA,eAAf","sourcesContent":["import React, { useContext } from 'react'\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { AuthContext } from '../helpers/AuthContext'\r\nimport jwt_decode from \"jwt-decode\";\r\nconst ProtectedRoutes = ({ component: Component, ...rest }) => {\r\n    const { setToken } = useContext(AuthContext);\r\n\r\n    const isAuthenticated = localStorage.getItem(\"token\");\r\n    console.log(\"this\", isAuthenticated);\r\n    var loggedIn = false;\r\n    if (isAuthenticated) {\r\n        const jwt_token = jwt_decode(isAuthenticated);\r\n        loggedIn = +new Date(+jwt_token.exp * 1000) > +new Date();\r\n        if (!loggedIn) localStorage.removeItem(\"token\");\r\n    }\r\n\r\n    return (\r\n        <Route\r\n            {...rest}\r\n            render={(props) => setToken ? (<Component {...props} />) : (<Redirect to=\"/\" />)}\r\n        />\r\n    )\r\n}\r\n\r\nexport default ProtectedRoutes\r\n\r\n"]},"metadata":{},"sourceType":"module"}