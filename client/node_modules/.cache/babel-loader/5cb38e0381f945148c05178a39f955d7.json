{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useState, useEffect } from 'react';\nimport Axios from 'axios';\nexport default function useFindUser() {\n  _s();\n\n  const [user, setUser] = useState(null);\n  const [isLoading, setLoading] = useState(true);\n  useEffect(() => {\n    async function findUser() {\n      await Axios.get('/').then(res => {\n        setUser(res.data.currentUser);\n        setLoading(false);\n      }).catch(err => {\n        //console.log(err);\n        setLoading(false);\n      });\n    }\n\n    findUser();\n  }, []);\n  return {\n    user,\n    setUser,\n    isLoading\n  };\n}\n\n_s(useFindUser, \"f4G9Xe4SKpF7pfHI5JNGA42neww=\");","map":{"version":3,"sources":["C:/Users/Dell/Desktop/api/notes-taker-fullstack/notes-taker-client/src/helpers/useFindUser.js"],"names":["React","useState","useEffect","Axios","useFindUser","user","setUser","isLoading","setLoading","findUser","get","then","res","data","currentUser","catch","err"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,eAAe,SAASC,WAAT,GAAuB;AAAA;;AAElC,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBL,QAAQ,CAAC,IAAD,CAAhC;AACA,QAAM,CAACM,SAAD,EAAYC,UAAZ,IAA0BP,QAAQ,CAAC,IAAD,CAAxC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZ,mBAAeO,QAAf,GAA0B;AACtB,YAAMN,KAAK,CAACO,GAAN,CAAU,GAAV,EACDC,IADC,CACIC,GAAG,IAAI;AACTN,QAAAA,OAAO,CAACM,GAAG,CAACC,IAAJ,CAASC,WAAV,CAAP;AACAN,QAAAA,UAAU,CAAC,KAAD,CAAV;AACH,OAJC,EAICO,KAJD,CAIOC,GAAG,IAAI;AACZ;AACAR,QAAAA,UAAU,CAAC,KAAD,CAAV;AACH,OAPC,CAAN;AAQH;;AAEDC,IAAAA,QAAQ;AACX,GAbQ,EAaN,EAbM,CAAT;AAgBA,SAAO;AACHJ,IAAAA,IADG;AAEHC,IAAAA,OAFG;AAGHC,IAAAA;AAHG,GAAP;AAKH;;GA1BuBH,W","sourcesContent":["import React from 'react'\r\nimport { useState, useEffect } from 'react';\r\nimport Axios from 'axios';\r\n\r\nexport default function useFindUser() {\r\n\r\n    const [user, setUser] = useState(null);\r\n    const [isLoading, setLoading] = useState(true);\r\n\r\n    useEffect(() => {\r\n        async function findUser() {\r\n            await Axios.get('/')\r\n                .then(res => {\r\n                    setUser(res.data.currentUser);\r\n                    setLoading(false);\r\n                }).catch(err => {\r\n                    //console.log(err);\r\n                    setLoading(false);\r\n                });\r\n        }\r\n\r\n        findUser();\r\n    }, []);\r\n\r\n\r\n    return {\r\n        user,\r\n        setUser,\r\n        isLoading\r\n    }\r\n}\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}