{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dell\\\\Desktop\\\\api\\\\notes-taker-fullstack\\\\notes-taker-client\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport { useEffect, useState } from 'react';\nimport { BrowserRouter as Router, Switch, Route, Link } from 'react-router-dom';\nimport Home from './components/Home';\nimport Login from './components/Login';\nimport SignUp from './components/SignUp';\nimport { AuthContext } from \"./helpers/AuthContext\";\nimport Axios from \"axios\";\nimport { useHistory } from 'react-router';\nimport ProtectedRoutes from './protectedRoutes/ProtectedRoutes';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const url = \"httpl://localhost:3002\";\n  const history = useHistory();\n  useEffect(() => {\n    Axios.post(url, {\n      headers: {\n        accessToken: localStorage.getItem(\"accessToken\")\n      }\n    }).then(response => {\n      if (response.data.error) {\n        setIsLoggedIn(false);\n        history.push(\"/\");\n      } else {\n        setIsLoggedIn(true);\n        history.push(\"/dashboard\");\n      }\n    });\n  });\n\n  const logout = () => {\n    localStorage.removeItem(\"accessToken\");\n    setIsLoggedIn(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n      value: {\n        isLoggedIn,\n        setIsLoggedIn\n      },\n      children: /*#__PURE__*/_jsxDEV(Router, {\n        children: [!isLoggedIn ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Link, {\n            to: \"/\",\n            children: \"Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/register\",\n            children: \"Sign up\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: logout,\n          children: \"Log out\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 23\n        }, this), /*#__PURE__*/_jsxDEV(Switch, {\n          children: [/*#__PURE__*/_jsxDEV(ProtectedRoutes, {\n            path: \"/dashboard\",\n            exact: true,\n            component: Home\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/\",\n            render: () => /*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 43\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/register\",\n            component: SignUp\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"MTm/+D1PjV9Rxs66bNdWEj90WEA=\", false, function () {\n  return [useHistory];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/Dell/Desktop/api/notes-taker-fullstack/notes-taker-client/src/App.js"],"names":["useEffect","useState","BrowserRouter","Router","Switch","Route","Link","Home","Login","SignUp","AuthContext","Axios","useHistory","ProtectedRoutes","App","isLoggedIn","setIsLoggedIn","url","history","post","headers","accessToken","localStorage","getItem","then","response","data","error","push","logout","removeItem"],"mappings":";;;AAAA,OAAO,WAAP;AACA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,aAAa,IAAIC,MAA1B,EAAkCC,MAAlC,EAA0CC,KAA1C,EAAiDC,IAAjD,QAA6D,kBAA7D;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,SAASC,WAAT,QAA4B,uBAA5B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,cAA3B;AACA,OAAOC,eAAP,MAA4B,mCAA5B;;;;AACA,SAASC,GAAT,GAAe;AAAA;;AAEb,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8Bf,QAAQ,CAAC,KAAD,CAA5C;AACA,QAAMgB,GAAG,GAAG,wBAAZ;AACA,QAAMC,OAAO,GAAGN,UAAU,EAA1B;AAEAZ,EAAAA,SAAS,CAAC,MAAM;AACdW,IAAAA,KAAK,CAACQ,IAAN,CAAWF,GAAX,EAAgB;AACdG,MAAAA,OAAO,EAAE;AACPC,QAAAA,WAAW,EAAEC,YAAY,CAACC,OAAb,CAAqB,aAArB;AADN;AADK,KAAhB,EAIGC,IAJH,CAISC,QAAD,IAAc;AACpB,UAAIA,QAAQ,CAACC,IAAT,CAAcC,KAAlB,EAAyB;AACvBX,QAAAA,aAAa,CAAC,KAAD,CAAb;AACAE,QAAAA,OAAO,CAACU,IAAR,CAAa,GAAb;AACD,OAHD,MAIK;AACHZ,QAAAA,aAAa,CAAC,IAAD,CAAb;AACAE,QAAAA,OAAO,CAACU,IAAR,CAAa,YAAb;AACD;AACF,KAbD;AAcD,GAfQ,CAAT;;AAiBA,QAAMC,MAAM,GAAG,MAAM;AACnBP,IAAAA,YAAY,CAACQ,UAAb,CAAwB,aAAxB;AACAd,IAAAA,aAAa,CAAC,KAAD,CAAb;AACD,GAHD;;AAKA,sBACE;AAAA,2BACE,QAAC,WAAD,CAAa,QAAb;AAAsB,MAAA,KAAK,EAAE;AAAED,QAAAA,UAAF;AAAcC,QAAAA;AAAd,OAA7B;AAAA,6BACE,QAAC,MAAD;AAAA,mBAEI,CAACD,UAAD,gBACE;AAAA,kCACE,QAAC,IAAD;AAAM,YAAA,EAAE,EAAC,GAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE,QAAC,IAAD;AAAM,YAAA,EAAE,EAAC,WAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA,wBADF,gBAIU;AAAQ,UAAA,OAAO,EAAEc,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBANd,eAOE,QAAC,MAAD;AAAA,kCACE,QAAC,eAAD;AAAiB,YAAA,IAAI,EAAC,YAAtB;AAAmC,YAAA,KAAK,MAAxC;AAAyC,YAAA,SAAS,EAAEtB;AAApD;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE,QAAC,KAAD;AAAO,YAAA,IAAI,EAAC,GAAZ;AAAgB,YAAA,MAAM,EAAE,mBAAM,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAA9B;AAAA;AAAA;AAAA;AAAA,kBAFF,eAGE,QAAC,KAAD;AAAO,YAAA,IAAI,EAAC,WAAZ;AAAwB,YAAA,SAAS,EAAEE;AAAnC;AAAA;AAAA;AAAA;AAAA,kBAHF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAPF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAmBD;;GA/CQK,G;UAISF,U;;;KAJTE,G;AAiDT,eAAeA,GAAf","sourcesContent":["import './App.css';\r\nimport { useEffect, useState } from 'react'\r\nimport { BrowserRouter as Router, Switch, Route, Link } from 'react-router-dom'\r\nimport Home from './components/Home'\r\nimport Login from './components/Login'\r\nimport SignUp from './components/SignUp';\r\nimport { AuthContext } from \"./helpers/AuthContext\";\r\nimport Axios from \"axios\";\r\nimport { useHistory } from 'react-router';\r\nimport ProtectedRoutes from './protectedRoutes/ProtectedRoutes'\r\nfunction App() {\r\n\r\n  const [isLoggedIn, setIsLoggedIn] = useState(false)\r\n  const url = \"httpl://localhost:3002\";\r\n  const history = useHistory()\r\n\r\n  useEffect(() => {\r\n    Axios.post(url, {\r\n      headers: {\r\n        accessToken: localStorage.getItem(\"accessToken\")\r\n      }\r\n    }).then((response) => {\r\n      if (response.data.error) {\r\n        setIsLoggedIn(false);\r\n        history.push(\"/\")\r\n      }\r\n      else {\r\n        setIsLoggedIn(true);\r\n        history.push(\"/dashboard\")\r\n      }\r\n    })\r\n  })\r\n\r\n  const logout = () => {\r\n    localStorage.removeItem(\"accessToken\");\r\n    setIsLoggedIn(false);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <AuthContext.Provider value={{ isLoggedIn, setIsLoggedIn }}>\r\n        <Router>\r\n          {\r\n            !isLoggedIn ? (\r\n              <>\r\n                <Link to=\"/\">Login</Link>\r\n                <Link to=\"/register\">Sign up</Link>\r\n              </>) : (<button onClick={logout}>Log out</button>)}\r\n          <Switch>\r\n            <ProtectedRoutes path=\"/dashboard\" exact component={Home} />\r\n            <Route path=\"/\" render={() => <Login />} />\r\n            <Route path=\"/register\" component={SignUp} />\r\n          </Switch>\r\n        </Router>\r\n      </AuthContext.Provider>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}