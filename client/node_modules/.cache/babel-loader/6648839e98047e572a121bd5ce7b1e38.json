{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dell\\\\Desktop\\\\api\\\\notes-taker-fullstack\\\\notes-taker-client\\\\src\\\\components\\\\Login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useState, useEffect } from 'react';\nimport Axios from 'axios';\nimport { useHistory } from 'react-router';\nimport { AuthContext } from '../helpers/AuthContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Login = () => {\n  _s();\n\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const history = useHistory();\n  const {\n    token,\n    setToken,\n    isLoggedIn,\n    setIsLoggedIn\n  } = useContext(AuthContext); // let url = \"http://localhost:3002\"\n\n  const url = \"http://localhost:3002\";\n\n  const login = () => {\n    const data = {\n      username: username,\n      password: password\n    };\n    Axios.post(url + \"/login\", data).then(response => {\n      if (response.data.error) {\n        // alert(response.data)\n        // if there is any error, don't create an accessToken to localstorage, else if any error doesn't exist, create accessToken\n        console.log(\"response if condition error: \", response.data.error); // setIsLoggedIn(false)\n      } else {\n        console.log(\"token: \", response.data);\n        localStorage.setItem(\"accessToken\", response.data.token); //this comes from routes -> const accessToken -> res.json({token, username, id})\n        // setIsLoggedIn(true);\n      }\n    });\n  };\n\n  useEffect(() => {\n    Axios.get(url, {\n      headers: {\n        accessToken: localStorage.getItem(\"accessToken\")\n      }\n    }).then(response => {\n      if (response.data.error) {\n        console.log(response.data.error);\n        setIsLoggedIn(false);\n        history.push(\"/\"); // console.log(\"is logged in  \", isLoggedIn)\n      } else {\n        console.log(\"data- ----\", response.config.headers.accessToken);\n        console.log(response);\n        setToken(response.config.headers.accessToken);\n        setIsLoggedIn(true); // console.log(\"else is logged in \", isLoggedIn)\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"loginContainer\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Username\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      onChange: event => {\n        setUsername(event.target.value);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      onChange: event => {\n        setPassword(event.target.value);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: login,\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Login, \"q0vca1p4XC5WYxmklH7vAYQm+0c=\", false, function () {\n  return [useHistory];\n});\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["C:/Users/Dell/Desktop/api/notes-taker-fullstack/notes-taker-client/src/components/Login.js"],"names":["React","useContext","useState","useEffect","Axios","useHistory","AuthContext","Login","username","setUsername","password","setPassword","history","token","setToken","isLoggedIn","setIsLoggedIn","url","login","data","post","then","response","error","console","log","localStorage","setItem","get","headers","accessToken","getItem","push","config","catch","err","event","target","value"],"mappings":"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","sourcesContent":["import React, { useContext, useState, useEffect } from 'react';\r\nimport Axios from 'axios'\r\nimport { useHistory } from 'react-router';\r\nimport { AuthContext } from '../helpers/AuthContext'\r\n\r\nconst Login = () => {\r\n    const [username, setUsername] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const history = useHistory();\r\n\r\n    const { token, setToken, isLoggedIn, setIsLoggedIn } = useContext(AuthContext);\r\n\r\n    // let url = \"http://localhost:3002\"\r\n\r\n\r\n    const url = \"http://localhost:3002\"\r\n\r\n    const login = () => {\r\n        const data = { username: username, password: password }\r\n        Axios.post(url + \"/login\", data).then((response) => {\r\n            if (response.data.error) {\r\n                // alert(response.data)\r\n                // if there is any error, don't create an accessToken to localstorage, else if any error doesn't exist, create accessToken\r\n                console.log(\"response if condition error: \", response.data.error);\r\n                // setIsLoggedIn(false)\r\n            }\r\n            else {\r\n                console.log(\"token: \", response.data);\r\n                localStorage.setItem(\"accessToken\", response.data.token)  //this comes from routes -> const accessToken -> res.json({token, username, id})\r\n                // setIsLoggedIn(true);\r\n            }\r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n        Axios.get(url, {\r\n            headers: {\r\n                accessToken: localStorage.getItem(\"accessToken\")\r\n            }\r\n        })\r\n            .then((response) => {\r\n                if (response.data.error) {\r\n                    console.log(response.data.error)\r\n                    setIsLoggedIn(false)\r\n                    history.push(\"/\")\r\n                    // console.log(\"is logged in  \", isLoggedIn)\r\n                }\r\n                else {\r\n                    console.log(\"data- ----\", response.config.headers.accessToken)\r\n                    console.log(response)\r\n                    setToken(response.config.headers.accessToken)\r\n                    setIsLoggedIn(true)\r\n                    // console.log(\"else is logged in \", isLoggedIn)\r\n\r\n                }\r\n            })\r\n            .catch((err) => {\r\n                console.log(err)\r\n            })\r\n    }, [])\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"loginContainer\">\r\n            <h1>Login</h1>\r\n            <label>Username</label>\r\n            <input type=\"text\" onChange={(event) => { setUsername(event.target.value) }} />\r\n\r\n            <label>Password</label>\r\n            <input type=\"password\" onChange={(event) => { setPassword(event.target.value) }} />\r\n\r\n            <button onClick={login}>Login</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login\r\n"]},"metadata":{},"sourceType":"module"}