{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dell\\\\Desktop\\\\api\\\\notes-taker-fullstack\\\\notes-taker-client\\\\src\\\\protectedRoutes\\\\ProtectedRoutes.js\";\nimport React, { useContext } from 'react';\nimport { Route, Redirect } from 'react-router-dom'; // import { AuthContext } from '../helpers/AuthContext'\n\nimport jwt_decode from \"jwt-decode\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ProtectedRoutes = ({\n  component: Component,\n  ...rest\n}) => {\n  // const { setToken, token } = useContext(AuthContext);\n  const isAuthenticated = localStorage.getItem(\"token\");\n  var loggedIn = false;\n\n  if (isAuthenticated) {\n    // console.log(\"this\", isAuthenticated);\n    const jwt_token = jwt_decode(isAuthenticated);\n    loggedIn = +new Date(+jwt_token.expiresIn * 1000) > +new Date();\n    console.log(jwt_token, \"token decode\", loggedIn); // loggedIn = true;\n\n    if (!loggedIn) localStorage.removeItem(\"token\");\n  } // const accessToken = localStorage.getItem(\"token\")\n  // console.log(\"this \", accessToken)\n\n\n  return (\n    /*#__PURE__*/\n    // <Route\n    //     {...rest}\n    //     render={(props) => accessToken ? (<Component {...props} />) : (<Redirect to=\"/\" />)}\n    // />\n    _jsxDEV(Route, { ...rest,\n      render: props => loggedIn ? /*#__PURE__*/_jsxDEV(Component, { ...props\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 28\n      }, this) : /*#__PURE__*/_jsxDEV(Redirect, {\n        to: \"/\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 55\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }, this)\n  );\n};\n\n_c = ProtectedRoutes;\nexport default ProtectedRoutes;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProtectedRoutes\");","map":{"version":3,"sources":["C:/Users/Dell/Desktop/api/notes-taker-fullstack/notes-taker-client/src/protectedRoutes/ProtectedRoutes.js"],"names":["React","useContext","Route","Redirect","jwt_decode","ProtectedRoutes","component","Component","rest","isAuthenticated","localStorage","getItem","loggedIn","jwt_token","Date","expiresIn","console","log","removeItem","props"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,kBAAhC,C,CACA;;AACA,OAAOC,UAAP,MAAuB,YAAvB;;;AACA,MAAMC,eAAe,GAAG,CAAC;AAAEC,EAAAA,SAAS,EAAEC,SAAb;AAAwB,KAAGC;AAA3B,CAAD,KAAuC;AAC3D;AAEA,QAAMC,eAAe,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAxB;AACA,MAAIC,QAAQ,GAAG,KAAf;;AACA,MAAIH,eAAJ,EAAqB;AACjB;AACA,UAAMI,SAAS,GAAGT,UAAU,CAACK,eAAD,CAA5B;AACAG,IAAAA,QAAQ,GAAG,CAAC,IAAIE,IAAJ,CAAS,CAACD,SAAS,CAACE,SAAX,GAAuB,IAAhC,CAAD,GAAyC,CAAC,IAAID,IAAJ,EAArD;AACAE,IAAAA,OAAO,CAACC,GAAR,CAAYJ,SAAZ,EAAuB,cAAvB,EAAuCD,QAAvC,EAJiB,CAKjB;;AACA,QAAI,CAACA,QAAL,EAAeF,YAAY,CAACQ,UAAb,CAAwB,OAAxB;AAClB,GAZ0D,CAc3D;AACA;;;AAEA;AAAA;AACI;AACA;AACA;AACA;AACA,YAAC,KAAD,OACQV,IADR;AAEI,MAAA,MAAM,EAAGW,KAAD,IACJP,QAAQ,gBAAG,QAAC,SAAD,OAAeO;AAAf;AAAA;AAAA;AAAA;AAAA,cAAH,gBAA8B,QAAC,QAAD;AAAU,QAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA;AAH9C;AAAA;AAAA;AAAA;AAAA;AALJ;AAYH,CA7BD;;KAAMd,e;AA+BN,eAAeA,eAAf","sourcesContent":["import React, { useContext } from 'react'\r\nimport { Route, Redirect } from 'react-router-dom';\r\n// import { AuthContext } from '../helpers/AuthContext'\r\nimport jwt_decode from \"jwt-decode\";\r\nconst ProtectedRoutes = ({ component: Component, ...rest }) => {\r\n    // const { setToken, token } = useContext(AuthContext);\r\n\r\n    const isAuthenticated = localStorage.getItem(\"token\");\r\n    var loggedIn = false;\r\n    if (isAuthenticated) {\r\n        // console.log(\"this\", isAuthenticated);\r\n        const jwt_token = jwt_decode(isAuthenticated);\r\n        loggedIn = +new Date(+jwt_token.expiresIn * 1000) > +new Date();\r\n        console.log(jwt_token, \"token decode\", loggedIn)\r\n        // loggedIn = true;\r\n        if (!loggedIn) localStorage.removeItem(\"token\");\r\n    }\r\n\r\n    // const accessToken = localStorage.getItem(\"token\")\r\n    // console.log(\"this \", accessToken)\r\n\r\n    return (\r\n        // <Route\r\n        //     {...rest}\r\n        //     render={(props) => accessToken ? (<Component {...props} />) : (<Redirect to=\"/\" />)}\r\n        // />\r\n        <Route\r\n            {...rest}\r\n            render={(props) =>\r\n                loggedIn ? <Component {...props} /> : <Redirect to=\"/\" />\r\n            }\r\n        />\r\n    )\r\n}\r\n\r\nexport default ProtectedRoutes\r\n\r\n"]},"metadata":{},"sourceType":"module"}