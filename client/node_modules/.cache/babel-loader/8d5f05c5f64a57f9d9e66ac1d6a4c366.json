{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dell\\\\Desktop\\\\api\\\\notes-taker-fullstack\\\\notes-taker-client\\\\src\\\\components\\\\Account\\\\ResetPassword.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Axios from 'axios';\nimport { toast } from 'react-toastify';\nimport { useHistory } from 'react-router';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ResetPassword = () => {\n  _s();\n\n  const [resetToken, setToken] = useState(\"\");\n  const [newPassword, setNewPassword] = useState(\"\");\n  const url = \"http://localhost:3002/reset-password\";\n  let history = useHistory();\n\n  const savePassword = e => {\n    e.preventDefault();\n    Axios.put(url, {\n      resetToken,\n      newPassword\n    }).then(response => {\n      if (response.data.error) {\n        toast.warn(response.data.err);\n      } else {\n        toast.success(response.data);\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container-bcg\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: savePassword,\n      className: \"form login-form d-flex flex-column justify-content-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"dark-blue\",\n        children: \"Reset password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-space\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Token\",\n          onChange: event => {\n            setToken(event.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          placeholder: \"New password\",\n          onChange: event => {\n            setNewPassword(event.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"button-span text-center\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            children: \"Save new password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ResetPassword, \"vldbLCrBJ5Nt9JofyFvWYLzFPOQ=\", false, function () {\n  return [useHistory];\n});\n\n_c = ResetPassword;\nexport default ResetPassword;\n\nvar _c;\n\n$RefreshReg$(_c, \"ResetPassword\");","map":{"version":3,"sources":["C:/Users/Dell/Desktop/api/notes-taker-fullstack/notes-taker-client/src/components/Account/ResetPassword.js"],"names":["React","useState","Axios","toast","useHistory","ResetPassword","resetToken","setToken","newPassword","setNewPassword","url","history","savePassword","e","preventDefault","put","then","response","data","error","warn","err","success","catch","console","log","event","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAsB,gBAAtB;AACA,SAASC,UAAT,QAA2B,cAA3B;;;AAEA,MAAMC,aAAa,GAAG,MAAM;AAAA;;AAExB,QAAM,CAACC,UAAD,EAAaC,QAAb,IAAyBN,QAAQ,CAAC,EAAD,CAAvC;AACA,QAAM,CAACO,WAAD,EAAcC,cAAd,IAAgCR,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAMS,GAAG,GAAG,sCAAZ;AACA,MAAIC,OAAO,GAAGP,UAAU,EAAxB;;AAEA,QAAMQ,YAAY,GAAIC,CAAD,IAAO;AACxBA,IAAAA,CAAC,CAACC,cAAF;AAEAZ,IAAAA,KAAK,CAACa,GAAN,CAAUL,GAAV,EAAe;AAAEJ,MAAAA,UAAF;AAAcE,MAAAA;AAAd,KAAf,EACKQ,IADL,CACWC,QAAD,IAAc;AAChB,UAAIA,QAAQ,CAACC,IAAT,CAAcC,KAAlB,EAAyB;AACrBhB,QAAAA,KAAK,CAACiB,IAAN,CAAWH,QAAQ,CAACC,IAAT,CAAcG,GAAzB;AACH,OAFD,MAGK;AACDlB,QAAAA,KAAK,CAACmB,OAAN,CAAcL,QAAQ,CAACC,IAAvB;AACH;AACJ,KARL,EASKK,KATL,CASYF,GAAD,IAAS;AACZG,MAAAA,OAAO,CAACC,GAAR,CAAYJ,GAAZ;AACH,KAXL;AAaH,GAhBD;;AAkBA,sBACI;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA,2BACI;AAAM,MAAA,QAAQ,EAAET,YAAhB;AAA8B,MAAA,SAAS,EAAC,2DAAxC;AAAA,8BAEI;AAAI,QAAA,SAAS,EAAC,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA,gCACI;AAAO,UAAA,IAAI,EAAC,MAAZ;AAAmB,UAAA,WAAW,EAAC,OAA/B;AAAuC,UAAA,QAAQ,EAAGc,KAAD,IAAW;AAAEnB,YAAAA,QAAQ,CAACmB,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAR;AAA8B;AAA5F;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAO,UAAA,IAAI,EAAC,UAAZ;AAAuB,UAAA,WAAW,EAAC,cAAnC;AAAkD,UAAA,QAAQ,EAAGF,KAAD,IAAW;AAAEjB,YAAAA,cAAc,CAACiB,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAd;AAAoC;AAA7G;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAHJ,eAQI;AAAK,QAAA,SAAS,EAAC,yBAAf;AAAA,+BACI;AAAA,iCACI;AAAQ,YAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cARJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAmBH,CA5CD;;GAAMvB,a;UAKYD,U;;;KALZC,a;AA8CN,eAAeA,aAAf","sourcesContent":["import React, { useState } from 'react'\r\nimport Axios from 'axios'\r\nimport { toast } from 'react-toastify'\r\nimport { useHistory } from 'react-router'\r\n\r\nconst ResetPassword = () => {\r\n\r\n    const [resetToken, setToken] = useState(\"\");\r\n    const [newPassword, setNewPassword] = useState(\"\");\r\n    const url = \"http://localhost:3002/reset-password\"\r\n    let history = useHistory()\r\n\r\n    const savePassword = (e) => {\r\n        e.preventDefault();\r\n\r\n        Axios.put(url, { resetToken, newPassword })\r\n            .then((response) => {\r\n                if (response.data.error) {\r\n                    toast.warn(response.data.err)\r\n                }\r\n                else {\r\n                    toast.success(response.data);\r\n                }\r\n            })\r\n            .catch((err) => {\r\n                console.log(err)\r\n            })\r\n\r\n    }\r\n\r\n    return (\r\n        <div className=\"container-bcg\">\r\n            <form onSubmit={savePassword} className=\"form login-form d-flex flex-column justify-content-center\">\r\n\r\n                <h2 className=\"dark-blue\">Reset password</h2>\r\n                <div className=\"form-space\">\r\n                    <input type=\"text\" placeholder=\"Token\" onChange={(event) => { setToken(event.target.value) }} />\r\n                    <input type=\"password\" placeholder=\"New password\" onChange={(event) => { setNewPassword(event.target.value) }} />\r\n\r\n                </div>\r\n                <div className=\"button-span text-center\">\r\n                    <div>\r\n                        <button type=\"submit\">Save new password</button>\r\n                    </div>\r\n\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ResetPassword\r\n"]},"metadata":{},"sourceType":"module"}