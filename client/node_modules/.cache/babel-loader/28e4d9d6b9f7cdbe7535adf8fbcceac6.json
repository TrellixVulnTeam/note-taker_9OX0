{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dell\\\\Desktop\\\\api\\\\notes-taker-fullstack\\\\notes-taker-client\\\\src\\\\components\\\\dashboard\\\\notes\\\\Notes.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport Axios from 'axios';\nimport Edit from '../../Buttons/Edit';\nimport Delete from '../../Buttons/Delete';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Notes = () => {\n  _s();\n\n  const url = \"http://localhost:3002/notes\";\n  const token = localStorage.getItem(\"token\");\n  const userLoggedIn = localStorage.getItem(\"user\");\n  const [notes, setNotes] = useState([]);\n  const [date, setDate] = useState();\n\n  const getNotes = () => {\n    Axios.get(url, {\n      headers: {\n        \"token\": `${token}`\n      }\n    }).then(response => {\n      console.log(\"allNotes\", response.data);\n      let allNotes = response.data; // setNotes(allNotes);\n\n      let filteredNotes = allNotes.filter(eachNote => {\n        return eachNote.user === userLoggedIn;\n      });\n      setNotes(filteredNotes);\n      console.log(\"filteredNotes\", filteredNotes);\n\n      for (let i = 0; i < allNotes.length; i++) {\n        let dateFormat = allNotes[i].createdAt;\n        let date = new Date(dateFormat);\n        let year = date.getFullYear();\n        let month = date.getMonth() + 1;\n        let dt = date.getDate();\n\n        if (dt < 10) {\n          dt = '0' + dt;\n        }\n\n        if (month < 10) {\n          month = '0' + month;\n        }\n\n        let formattedDate = dt + \".\" + month + \".\" + year;\n        setDate(formattedDate);\n      }\n    });\n  };\n\n  const editNote = id => {\n    console.log(id);\n  };\n\n  const deleteNote = id => {\n    Axios.delete(url + `/${id}`, {\n      headers: {\n        \"token\": `${token}`\n      }\n    }).then(response => {\n      setNotes(notes.filter(note => {\n        console.log(\"note from delete method \" + note.id);\n        return note.id !== id;\n      }));\n    });\n  };\n\n  useEffect(() => {\n    getNotes(); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"notes flex-grow-1\",\n    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Notesss\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Notes, \"jRW3Y3fr6ZlFp2keO8s16Oiihw0=\");\n\n_c = Notes;\nexport default Notes;\n\nvar _c;\n\n$RefreshReg$(_c, \"Notes\");","map":{"version":3,"sources":["C:/Users/Dell/Desktop/api/notes-taker-fullstack/notes-taker-client/src/components/dashboard/notes/Notes.js"],"names":["React","useEffect","useState","Axios","Edit","Delete","Notes","url","token","localStorage","getItem","userLoggedIn","notes","setNotes","date","setDate","getNotes","get","headers","then","response","console","log","data","allNotes","filteredNotes","filter","eachNote","user","i","length","dateFormat","createdAt","Date","year","getFullYear","month","getMonth","dt","getDate","formattedDate","editNote","id","deleteNote","delete","note"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport Axios from 'axios'\r\nimport Edit from '../../Buttons/Edit'\r\nimport Delete from '../../Buttons/Delete'\r\nconst Notes = () => {\r\n\r\n    const url = \"http://localhost:3002/notes\";\r\n    const token = localStorage.getItem(\"token\");\r\n    const userLoggedIn = localStorage.getItem(\"user\")\r\n    const [notes, setNotes] = useState([])\r\n    const [date, setDate] = useState();\r\n\r\n    const getNotes = () => {\r\n        Axios.get((url), {\r\n            headers: {\r\n                \"token\": `${token}`\r\n            }\r\n        }).then((response) => {\r\n            console.log(\"allNotes\", response.data)\r\n            let allNotes = response.data;\r\n            // setNotes(allNotes);\r\n            let filteredNotes = allNotes.filter((eachNote) => {\r\n                return eachNote.user === userLoggedIn\r\n            })\r\n            setNotes(filteredNotes)\r\n            console.log(\"filteredNotes\", filteredNotes)\r\n\r\n            for (let i = 0; i < allNotes.length; i++) {\r\n                let dateFormat = allNotes[i].createdAt;\r\n\r\n                let date = new Date(dateFormat);\r\n                let year = date.getFullYear();\r\n                let month = date.getMonth() + 1;\r\n                let dt = date.getDate();\r\n\r\n                if (dt < 10) {\r\n                    dt = '0' + dt;\r\n                }\r\n                if (month < 10) {\r\n                    month = '0' + month;\r\n                }\r\n\r\n                let formattedDate = dt + \".\" + month + \".\" + year;\r\n                setDate(formattedDate);\r\n            }\r\n        })\r\n    }\r\n\r\n    const editNote = (id) => {\r\n        console.log(id)\r\n    }\r\n\r\n    const deleteNote = (id) => {\r\n        Axios.delete((url + `/${id}`), {\r\n            headers: {\r\n                \"token\": `${token}`\r\n            }\r\n        }).then((response) => {\r\n            setNotes(notes.filter((note) => {\r\n                console.log(\"note from delete method \" + note.id)\r\n                return note.id !== id\r\n            }))\r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n        getNotes();\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [])\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"notes flex-grow-1\">\r\n            <h1>Notesss</h1>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Notes\r\n"]},"metadata":{},"sourceType":"module"}