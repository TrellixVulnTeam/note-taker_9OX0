{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dell\\\\Desktop\\\\api\\\\notes-taker-fullstack\\\\notes-taker-client\\\\src\\\\protectedRoutes\\\\ProtectedRoutes.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext } from 'react';\nimport { Redirect, Route } from \"react-router-dom\";\nimport { AuthContext } from '../helpers/AuthContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ProtectedRoutes = ({\n  component: Component,\n  isLoggedIn,\n  ...restOfProps\n}) => {\n  _s();\n\n  const {\n    setIsLoggedIn\n  } = useContext(AuthContext); // const isAuthenticated = localStorage.getItem(\"accessToken\");\n\n  console.log(\"this \", isLoggedIn);\n  return /*#__PURE__*/_jsxDEV(Route, { ...restOfProps,\n    render: props => !isLoggedIn ? /*#__PURE__*/_jsxDEV(Component, { ...props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 63\n    }, this) : /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 90\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ProtectedRoutes, \"0Jq8fnKUE4bZuyXpdEivssOnwtc=\");\n\n_c = ProtectedRoutes;\nexport default ProtectedRoutes;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProtectedRoutes\");","map":{"version":3,"sources":["C:/Users/Dell/Desktop/api/notes-taker-fullstack/notes-taker-client/src/protectedRoutes/ProtectedRoutes.js"],"names":["React","useContext","Redirect","Route","AuthContext","ProtectedRoutes","component","Component","isLoggedIn","restOfProps","setIsLoggedIn","console","log","props"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,SAASC,QAAT,EAAmBC,KAAnB,QAAgC,kBAAhC;AACA,SAASC,WAAT,QAA4B,wBAA5B;;;AAEA,MAAMC,eAAe,GAAG,CAAC;AAAEC,EAAAA,SAAS,EAAEC,SAAb;AAAwBC,EAAAA,UAAxB;AAAoC,KAAGC;AAAvC,CAAD,KAA0D;AAAA;;AAC9E,QAAM;AAAEC,IAAAA;AAAF,MAAoBT,UAAU,CAACG,WAAD,CAApC,CAD8E,CAG9E;;AAEAO,EAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBJ,UAArB;AACA,sBACI,QAAC,KAAD,OACQC,WADR;AACqB,IAAA,MAAM,EAAGI,KAAD,IAAW,CAACL,UAAD,gBAAc,QAAC,SAAD,OAAeK;AAAf;AAAA;AAAA;AAAA;AAAA,YAAd,gBAAyC,QAAC,QAAD;AAAU,MAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA;AADjF;AAAA;AAAA;AAAA;AAAA,UADJ;AAMH,CAZD;;GAAMR,e;;KAAAA,e;AAcN,eAAeA,eAAf","sourcesContent":["import React, { useContext } from 'react'\r\nimport { Redirect, Route } from \"react-router-dom\";\r\nimport { AuthContext } from '../helpers/AuthContext'\r\n\r\nconst ProtectedRoutes = ({ component: Component, isLoggedIn, ...restOfProps }) => {\r\n    const { setIsLoggedIn } = useContext(AuthContext);\r\n\r\n    // const isAuthenticated = localStorage.getItem(\"accessToken\");\r\n\r\n    console.log(\"this \", isLoggedIn)\r\n    return (\r\n        <Route\r\n            {...restOfProps} render={(props) => !isLoggedIn ? <Component {...props} /> : <Redirect to=\"/login\" />}\r\n\r\n        />\r\n    )\r\n}\r\n\r\nexport default ProtectedRoutes\r\n"]},"metadata":{},"sourceType":"module"}