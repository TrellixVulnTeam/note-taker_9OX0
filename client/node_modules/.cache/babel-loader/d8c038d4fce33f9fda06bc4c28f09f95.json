{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dell\\\\Desktop\\\\api\\\\notes-taker-fullstack\\\\notes-taker-client\\\\src\\\\App.js\";\n\n/* eslint-disable no-unused-vars */\nimport React, { useState } from 'react';\nimport './App.scss';\nimport { BrowserRouter as Router, Switch, Route, Redirect } from 'react-router-dom';\nimport Login from './components/Login';\nimport SignUp from './components/SignUp';\nimport Dashboard from './components/dashboard/Dashboard';\nimport ProtectedRoutes from './protectedRoutes/ProtectedRoutes';\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  const login = () => {\n    const data = {\n      email: email,\n      password: password\n    };\n    Axios.post(url + \"/login\", data).then(response => {\n      if (response.data.error) {\n        // toast.warn(response.data.error)\n        // alert(response.data)\n        // if there is any error, don't create an accessToken to localstorage, else if any error doesn't exist, create accessToken\n        console.log(\"response if condition error: \", response.data.error);\n      } else {\n        // toast.success(response.data.message)\n        console.log(\"userData: \", response.data);\n        localStorage.setItem(\"token\", response.data.token); //this comes from routes -> const accessToken -> res.json({token, username, id})\n\n        const userData = {\n          id: response.data.userId,\n          name: response.data.name,\n          email: response.data.email\n        };\n        localStorage.setItem(\"user\", JSON.stringify(userData));\n        redirect();\n      }\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Router, {\n      children: [/*#__PURE__*/_jsxDEV(Switch, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/login\",\n          exact: true,\n          component: Login\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/create-account\",\n          component: SignUp\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ProtectedRoutes, {\n          path: \"/dashboard\",\n          component: Dashboard\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/\",\n          children: /*#__PURE__*/_jsxDEV(Redirect, {\n            exact: true,\n            from: \"/\",\n            to: \"login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"**\",\n          component: () => \"404 NOT FOUND\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {\n        autoClose: 3000\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/Dell/Desktop/api/notes-taker-fullstack/notes-taker-client/src/App.js"],"names":["React","useState","BrowserRouter","Router","Switch","Route","Redirect","Login","SignUp","Dashboard","ProtectedRoutes","ToastContainer","App","login","data","email","password","Axios","post","url","then","response","error","console","log","localStorage","setItem","token","userData","id","userId","name","JSON","stringify","redirect"],"mappings":"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","sourcesContent":["/* eslint-disable no-unused-vars */\r\nimport React, { useState } from 'react';\r\nimport './App.scss';\r\nimport { BrowserRouter as Router, Switch, Route, Redirect } from 'react-router-dom'\r\nimport Login from './components/Login'\r\nimport SignUp from './components/SignUp';\r\nimport Dashboard from './components/dashboard/Dashboard'\r\nimport ProtectedRoutes from './protectedRoutes/ProtectedRoutes';\r\nimport { ToastContainer } from 'react-toastify'\r\nimport 'react-toastify/dist/ReactToastify.css'\r\n\r\nfunction App() {\r\n\r\n\r\n  const login = () => {\r\n    const data = { email: email, password: password }\r\n    Axios.post(url + \"/login\", data).then((response) => {\r\n      if (response.data.error) {\r\n        // toast.warn(response.data.error)\r\n        // alert(response.data)\r\n        // if there is any error, don't create an accessToken to localstorage, else if any error doesn't exist, create accessToken\r\n        console.log(\"response if condition error: \", response.data.error);\r\n      }\r\n      else {\r\n        // toast.success(response.data.message)\r\n        console.log(\"userData: \", response.data);\r\n        localStorage.setItem(\"token\", response.data.token); //this comes from routes -> const accessToken -> res.json({token, username, id})\r\n        const userData = {\r\n          id: response.data.userId,\r\n          name: response.data.name,\r\n          email: response.data.email\r\n        }\r\n\r\n        localStorage.setItem(\"user\", JSON.stringify(userData));\r\n        redirect();\r\n      }\r\n    })\r\n  }\r\n\r\n\r\n  return (\r\n    <div>\r\n      <Router>\r\n        {/* {\r\n          !isLoggedIn ? (\r\n            <>\r\n              <Link to=\"/login\">Login</Link>\r\n              <Link to=\"/create-account\">Sign up</Link>\r\n            </>) : (<LogOut />)} */}\r\n\r\n        {/* {\r\n          isLoggedIn && (\r\n            <Navbar />\r\n          )\r\n        } */}\r\n        <Switch>\r\n          <Route path=\"/login\" exact component={Login} />\r\n          <Route path=\"/create-account\" component={SignUp} />\r\n          <ProtectedRoutes path=\"/dashboard\" component={Dashboard} />\r\n          {/* <ProtectedRoutes path=\"/profile\" exact component={Profile} />\r\n          <ProtectedRoutes path=\"/add-note\" exact component={AddNote} />\r\n          <ProtectedRoutes path=\"/my-notes\" exact component={MyNotes} />\r\n          <ProtectedRoutes path=\"/notes\" exact component={Notes} /> */}\r\n          <Route exact path=\"/\">\r\n            <Redirect exact from=\"/\" to=\"login\" />\r\n          </Route>\r\n          <Route exact path=\"**\" component={() => \"404 NOT FOUND\"} />\r\n        </Switch>\r\n        <ToastContainer autoClose={3000} />\r\n      </Router>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}