{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dell\\\\Desktop\\\\api\\\\notes-taker-fullstack\\\\notes-taker-client\\\\src\\\\components\\\\dashboard\\\\User\\\\ChangePassword.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Axios from 'axios';\nimport { toast } from 'react-toastify';\nimport { useHistory } from 'react-router';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ChangePassword = () => {\n  _s();\n\n  const [oldPassword, setOldPaasword] = useState(\"\");\n  const [newPassword, setNewPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const token = localStorage.getItem(\"token\");\n  const url = \"http://localhost:3002/change-password\";\n  let history = useHistory();\n\n  const changePassword = e => {\n    e.preventDefault();\n    Axios.put(url, {\n      oldPassword,\n      newPassword,\n      confirmPassword\n    }, {\n      headers: {\n        \"token\": `${token}`\n      }\n    }).then(response => {\n      if (!(oldPassword && newPassword && confirmPassword)) {\n        toast.warn(\"Please fill all fields\");\n      } else {\n        if (!oldPassword) {\n          toast.warn(response.data.error);\n        } else if (newPassword !== confirmPassword) {\n          toast.warn(response.data.error);\n        } else {\n          toast.success(response.data);\n          history.push(\"/dashboard\");\n        }\n      }\n    }).catch(error => {\n      toast.warn(error);\n      console.log(error.data.error);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container-bcg d-flex\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: e => changePassword(e),\n      className: \"form login-form d-flex flex-column justify-content-center m-auto\",\n      autoComplete: \"off\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"dark-blue\",\n        children: \"Change password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"user-input d-flex flex-column\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          name: \"oldPassword\",\n          placeholder: \"Old password\",\n          onChange: event => {\n            setOldPaasword(event.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"user-input d-flex flex-column\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          name: \"newPassword\",\n          placeholder: \"New password\",\n          onChange: event => {\n            setNewPassword(event.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"user-input d-flex flex-column\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          name: \"confirmPassword\",\n          placeholder: \"Confirm new password\",\n          onChange: event => {\n            setConfirmPassword(event.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"button-span d-flex justify-content-center align-items-center\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ChangePassword, \"Oqe0b7Nqe6wYGAeoljmBnETpQ/U=\", false, function () {\n  return [useHistory];\n});\n\n_c = ChangePassword;\nexport default ChangePassword;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChangePassword\");","map":{"version":3,"sources":["C:/Users/Dell/Desktop/api/notes-taker-fullstack/notes-taker-client/src/components/dashboard/User/ChangePassword.js"],"names":["React","useState","Axios","toast","useHistory","ChangePassword","oldPassword","setOldPaasword","newPassword","setNewPassword","confirmPassword","setConfirmPassword","token","localStorage","getItem","url","history","changePassword","e","preventDefault","put","headers","then","response","warn","data","error","success","push","catch","console","log","event","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\r\nimport Axios from 'axios'\r\nimport { toast } from 'react-toastify'\r\nimport { useHistory } from 'react-router';\r\n\r\nconst ChangePassword = () => {\r\n\r\n    const [oldPassword, setOldPaasword] = useState(\"\");\r\n    const [newPassword, setNewPassword] = useState(\"\");\r\n    const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n    const token = localStorage.getItem(\"token\");\r\n    const url = \"http://localhost:3002/change-password\";\r\n    let history = useHistory()\r\n\r\n    const changePassword = (e) => {\r\n        e.preventDefault();\r\n\r\n        Axios.put(url, { oldPassword, newPassword, confirmPassword }, {\r\n            headers: {\r\n                \"token\": `${token}`\r\n            }\r\n        })\r\n            .then((response) => {\r\n                if (!(oldPassword && newPassword && confirmPassword)) {\r\n                    toast.warn(\"Please fill all fields\")\r\n                }\r\n                else {\r\n                    if (!oldPassword) {\r\n                        toast.warn(response.data.error)\r\n                    }\r\n                    else if (newPassword !== confirmPassword) {\r\n                        toast.warn(response.data.error)\r\n                    }\r\n                    else {\r\n                        toast.success(response.data)\r\n                        history.push(\"/dashboard\")\r\n                    }\r\n                }\r\n\r\n            })\r\n            .catch((error) => {\r\n                toast.warn(error)\r\n                console.log(error.data.error)\r\n            })\r\n    }\r\n\r\n    return (\r\n        <div className=\"container-bcg d-flex\">\r\n            <form onSubmit={(e) => changePassword(e)} className=\"form login-form d-flex flex-column justify-content-center m-auto\" autoComplete=\"off\">\r\n                <h2 className=\"dark-blue\">Change password</h2>\r\n                <div className=\"user-input d-flex flex-column\">\r\n                    <input type=\"password\" name=\"oldPassword\" placeholder=\"Old password\" onChange={(event) => { setOldPaasword(event.target.value) }} />\r\n                </div>\r\n                <div className=\"user-input d-flex flex-column\">\r\n                    <input type=\"password\" name=\"newPassword\" placeholder=\"New password\" onChange={(event) => { setNewPassword(event.target.value) }} />\r\n                </div>\r\n                <div className=\"user-input d-flex flex-column\">\r\n                    <input type=\"password\" name=\"confirmPassword\" placeholder=\"Confirm new password\" onChange={(event) => { setConfirmPassword(event.target.value) }} />\r\n                </div>\r\n                <div className=\"button-span d-flex justify-content-center align-items-center\">\r\n                    <button type=\"submit\">Edit</button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ChangePassword\r\n"]},"metadata":{},"sourceType":"module"}