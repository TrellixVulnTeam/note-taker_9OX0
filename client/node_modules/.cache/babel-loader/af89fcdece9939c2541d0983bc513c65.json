{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dell\\\\Desktop\\\\api\\\\notes-taker-fullstack\\\\notes-taker-client\\\\src\\\\protectedRoutes\\\\ProtectedRoutes.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext } from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { AuthContext } from '../helpers/AuthContext'; // import jwt_decode from 'jwt-decode';\n\nimport jwt_decode from \"jwt-decode\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ProtectedRoutes = ({\n  component: Component,\n  ...rest\n}) => {\n  _s();\n\n  const {\n    isLoggedIn,\n    setIsLoggedIn\n  } = useContext(AuthContext); // console.log(\"isLoggedIn   \", isLoggedIn)\n\n  var loggedIn = false;\n  const accessToken = localStorage.getItem(\"accessToken\");\n\n  if (accessToken) {\n    const jwt_token = jwt_decode(accessToken);\n    loggedIn = new Date(jwt_token.exp);\n  } // console.log(accessToken)\n\n\n  return /*#__PURE__*/_jsxDEV(Route, { ...rest,\n    render: props => setIsLoggedIn ? /*#__PURE__*/_jsxDEV(Component, { ...props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 49\n    }, this) : /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 78\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ProtectedRoutes, \"7/7G4d2noKoGXtVl70Yqq+sihGo=\");\n\n_c = ProtectedRoutes;\nexport default ProtectedRoutes;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProtectedRoutes\");","map":{"version":3,"sources":["C:/Users/Dell/Desktop/api/notes-taker-fullstack/notes-taker-client/src/protectedRoutes/ProtectedRoutes.js"],"names":["React","useContext","Route","Redirect","AuthContext","jwt_decode","ProtectedRoutes","component","Component","rest","isLoggedIn","setIsLoggedIn","loggedIn","accessToken","localStorage","getItem","jwt_token","Date","exp","props"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,kBAAhC;AACA,SAASC,WAAT,QAA4B,wBAA5B,C,CAEA;;AACA,OAAOC,UAAP,MAAuB,YAAvB;;;AAEA,MAAMC,eAAe,GAAG,CAAC;AAAEC,EAAAA,SAAS,EAAEC,SAAb;AAAwB,KAAGC;AAA3B,CAAD,KAAuC;AAAA;;AAC3D,QAAM;AAAEC,IAAAA,UAAF;AAAcC,IAAAA;AAAd,MAAgCV,UAAU,CAACG,WAAD,CAAhD,CAD2D,CAG3D;;AAEA,MAAIQ,QAAQ,GAAG,KAAf;AACA,QAAMC,WAAW,GAAGC,YAAY,CAACC,OAAb,CAAqB,aAArB,CAApB;;AAEA,MAAIF,WAAJ,EAAiB;AACb,UAAMG,SAAS,GAAGX,UAAU,CAACQ,WAAD,CAA5B;AACAD,IAAAA,QAAQ,GAAG,IAAIK,IAAJ,CAASD,SAAS,CAACE,GAAnB,CAAX;AACH,GAX0D,CAc3D;;;AACA,sBACI,QAAC,KAAD,OACQT,IADR;AAEI,IAAA,MAAM,EAAGU,KAAD,IAAWR,aAAa,gBAAI,QAAC,SAAD,OAAeQ;AAAf;AAAA;AAAA;AAAA;AAAA,YAAJ,gBAAiC,QAAC,QAAD;AAAU,MAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA;AAFrE;AAAA;AAAA;AAAA;AAAA,UADJ;AAMH,CArBD;;GAAMb,e;;KAAAA,e;AAuBN,eAAeA,eAAf","sourcesContent":["import React, { useContext } from 'react'\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { AuthContext } from '../helpers/AuthContext'\r\n\r\n// import jwt_decode from 'jwt-decode';\r\nimport jwt_decode from \"jwt-decode\"\r\n\r\nconst ProtectedRoutes = ({ component: Component, ...rest }) => {\r\n    const { isLoggedIn, setIsLoggedIn } = useContext(AuthContext);\r\n\r\n    // console.log(\"isLoggedIn   \", isLoggedIn)\r\n\r\n    var loggedIn = false;\r\n    const accessToken = localStorage.getItem(\"accessToken\")\r\n\r\n    if (accessToken) {\r\n        const jwt_token = jwt_decode(accessToken)\r\n        loggedIn = new Date(jwt_token.exp)\r\n    }\r\n\r\n\r\n    // console.log(accessToken)\r\n    return (\r\n        <Route\r\n            {...rest}\r\n            render={(props) => setIsLoggedIn ? (<Component {...props} />) : (<Redirect to=\"/\" />)}\r\n        />\r\n    )\r\n}\r\n\r\nexport default ProtectedRoutes\r\n\r\n"]},"metadata":{},"sourceType":"module"}