{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dell\\\\Desktop\\\\api\\\\notes-taker-fullstack\\\\notes-taker-client\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport { useEffect, useState } from 'react';\nimport { BrowserRouter as Router, Switch, Route, Link } from 'react-router-dom';\nimport Home from './components/Home';\nimport Login from './components/Login';\nimport SignUp from './components/SignUp';\nimport { AuthContext } from \"./helpers/AuthContext\";\nimport ProtectedRoute from \"./protectedRoutes/ProtectedRoutes\";\nimport Axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const url = \"http://localhost:3002\";\n  useEffect(() => {\n    Axios.get(url, {\n      headers: {\n        accessToken: localStorage.getItem(\"accessToken\")\n      }\n    }).then(response => {\n      if (response.data.error) {\n        setIsLoggedIn(false);\n        console.log(\"if   \" + isLoggedIn);\n        console.log(\"if  \", response.data.error);\n      } else {\n        setIsLoggedIn(true);\n        console.log(\"else   \" + isLoggedIn);\n        console.log(\"else  \", response.data.error);\n      }\n    });\n  }, []);\n\n  const logout = () => {\n    localStorage.removeItem(\"accessToken\");\n    setIsLoggedIn(false);\n    console.log(isLoggedIn);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n      value: {\n        isLoggedIn,\n        setIsLoggedIn\n      },\n      children: /*#__PURE__*/_jsxDEV(Router, {\n        children: [!isLoggedIn ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Link, {\n            to: \"/\",\n            children: \"Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/register\",\n            children: \"Sign up\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: logout,\n          children: \"Log out\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 23\n        }, this), /*#__PURE__*/_jsxDEV(Switch, {\n          children: [/*#__PURE__*/_jsxDEV(ProtectedRoute, {\n            exact: true,\n            path: \"/dashboard\",\n            component: Home\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/\",\n            component: Login\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/register\",\n            component: SignUp\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"fKLMlyFH2GMrhNeUDpp+0z1yiCo=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/Dell/Desktop/api/notes-taker-fullstack/notes-taker-client/src/App.js"],"names":["useEffect","useState","BrowserRouter","Router","Switch","Route","Link","Home","Login","SignUp","AuthContext","ProtectedRoute","Axios","App","isLoggedIn","setIsLoggedIn","url","get","headers","accessToken","localStorage","getItem","then","response","data","error","console","log","logout","removeItem"],"mappings":"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","sourcesContent":["import './App.css';\nimport { useEffect, useState } from 'react'\nimport { BrowserRouter as Router, Switch, Route, Link } from 'react-router-dom'\nimport Home from './components/Home'\nimport Login from './components/Login'\nimport SignUp from './components/SignUp';\nimport { AuthContext } from \"./helpers/AuthContext\";\nimport ProtectedRoute from \"./protectedRoutes/ProtectedRoutes\";\nimport Axios from \"axios\";\n\nfunction App() {\n\n\n  const [isLoggedIn, setIsLoggedIn] = useState(false)\n  const url = \"http://localhost:3002\";\n\n  useEffect(() => {\n    Axios.get(url, {\n      headers: {\n        accessToken: localStorage.getItem(\"accessToken\")\n      }\n    })\n      .then((response) => {\n        if (response.data.error) {\n          setIsLoggedIn(false)\n          console.log(\"if   \" + isLoggedIn)\n          console.log(\"if  \", response.data.error)\n        }\n        else {\n          setIsLoggedIn(true)\n          console.log(\"else   \" + isLoggedIn)\n          console.log(\"else  \", response.data.error)\n        }\n      })\n\n  }, [])\n\n\n  const logout = () => {\n    localStorage.removeItem(\"accessToken\");\n    setIsLoggedIn(false);\n    console.log(isLoggedIn)\n  }\n\n\n\n  return (\n    <div>\n      <AuthContext.Provider value={{ isLoggedIn, setIsLoggedIn }}>\n        <Router>\n          {\n            !isLoggedIn ? (\n              <>\n                <Link to=\"/\">Login</Link>\n                <Link to=\"/register\">Sign up</Link>\n              </>) : (<button onClick={logout}>Log out</button>)}\n          <Switch>\n            <ProtectedRoute exact path=\"/dashboard\" component={Home} />\n            <Route path=\"/\" component={Login} />\n            <Route path=\"/register\" component={SignUp} />\n          </Switch>\n        </Router>\n      </AuthContext.Provider>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}