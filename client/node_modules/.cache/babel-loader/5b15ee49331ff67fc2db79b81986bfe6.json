{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dell\\\\Desktop\\\\api\\\\notes-taker-fullstack\\\\notes-taker-client\\\\src\\\\protectedRoutes\\\\ProtectedRoutes.js\";\nimport React, { useContext } from 'react';\nimport { Redirect, Route } from 'react-router'; // import { AuthContext } from '../helpers/AuthContext'\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst isAuthenticated = window.localStorage.getItem(\"accessToken\");\n\nconst ProtectedRoutes = ({\n  component: Component,\n  isLoggedIn,\n  ...restOfProps\n}) => {\n  // const { setIsLoggedIn } = useContext(AuthContext);\n  // console.log(setIsLoggedIn)\n  return /*#__PURE__*/_jsxDEV(Route, { ...restOfProps,\n    render: props => {\n      if (isLoggedIn) {\n        return /*#__PURE__*/_jsxDEV(Component, { ...props\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 24\n        }, this);\n      } else {\n        return /*#__PURE__*/_jsxDEV(Redirect, {\n          to: \"/login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 24\n        }, this);\n      }\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 9\n  }, this);\n};\n\n_c = ProtectedRoutes;\nexport default ProtectedRoutes;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProtectedRoutes\");","map":{"version":3,"sources":["C:/Users/Dell/Desktop/api/notes-taker-fullstack/notes-taker-client/src/protectedRoutes/ProtectedRoutes.js"],"names":["React","useContext","Redirect","Route","isAuthenticated","window","localStorage","getItem","ProtectedRoutes","component","Component","isLoggedIn","restOfProps","props"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,SAASC,QAAT,EAAmBC,KAAnB,QAAgC,cAAhC,C,CACA;;;AAEA,MAAMC,eAAe,GAAGC,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4B,aAA5B,CAAxB;;AAEA,MAAMC,eAAe,GAAG,CAAC;AAAEC,EAAAA,SAAS,EAAEC,SAAb;AAAwBC,EAAAA,UAAxB;AAAoC,KAAGC;AAAvC,CAAD,KAA0D;AAC9E;AAEA;AAEA,sBACI,QAAC,KAAD,OAAWA,WAAX;AAAwB,IAAA,MAAM,EAAGC,KAAD,IAAW;AACvC,UAAIF,UAAJ,EAAgB;AACZ,4BAAO,QAAC,SAAD,OAAeE;AAAf;AAAA;AAAA;AAAA;AAAA,gBAAP;AACH,OAFD,MAGK;AACD,4BAAO,QAAC,QAAD;AAAU,UAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,gBAAP;AACH;AACJ;AAPD;AAAA;AAAA;AAAA;AAAA,UADJ;AAUH,CAfD;;KAAML,e;AAiBN,eAAeA,eAAf","sourcesContent":["import React, { useContext } from 'react'\r\nimport { Redirect, Route } from 'react-router';\r\n// import { AuthContext } from '../helpers/AuthContext'\r\n\r\nconst isAuthenticated = window.localStorage.getItem(\"accessToken\");\r\n\r\nconst ProtectedRoutes = ({ component: Component, isLoggedIn, ...restOfProps }) => {\r\n    // const { setIsLoggedIn } = useContext(AuthContext);\r\n\r\n    // console.log(setIsLoggedIn)\r\n\r\n    return (\r\n        <Route {...restOfProps} render={(props) => {\r\n            if (isLoggedIn) {\r\n                return <Component {...props} />\r\n            }\r\n            else {\r\n                return <Redirect to=\"/login\" />\r\n            }\r\n        }} />\r\n    )\r\n}\r\n\r\nexport default ProtectedRoutes\r\n"]},"metadata":{},"sourceType":"module"}